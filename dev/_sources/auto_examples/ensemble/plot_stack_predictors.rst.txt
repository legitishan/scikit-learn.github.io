
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9385022f-dc76-473d-9a36-273cdbb7d898 {color: black;background-color: white;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 pre{padding: 0;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-toggleable {background-color: white;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-item {z-index: 1;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-parallel-item:only-child::after {width: 0;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9385022f-dc76-473d-9a36-273cdbb7d898 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-9385022f-dc76-473d-9a36-273cdbb7d898" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f3a2f67-b454-419a-9083-29a81ce2b21f" type="checkbox" ><label class="sk-toggleable__label" for="3f3a2f67-b454-419a-9083-29a81ce2b21f">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="169ec513-c485-4836-a794-9c3d4952eb9f" type="checkbox" ><label class="sk-toggleable__label" for="169ec513-c485-4836-a794-9c3d4952eb9f">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="237c7265-f053-437e-9f76-8ad6f0689a6c" type="checkbox" ><label class="sk-toggleable__label" for="237c7265-f053-437e-9f76-8ad6f0689a6c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92f52130-97bc-4e74-bc79-da660b06b30e" type="checkbox" ><label class="sk-toggleable__label" for="92f52130-97bc-4e74-bc79-da660b06b30e">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8599fbb6-25ba-476f-9255-8ced30e27e6d" type="checkbox" ><label class="sk-toggleable__label" for="8599fbb6-25ba-476f-9255-8ced30e27e6d">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d {color: black;background-color: white;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d pre{padding: 0;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-toggleable {background-color: white;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-estimator:hover {background-color: #d4ebff;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-item {z-index: 1;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-parallel-item:only-child::after {width: 0;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a7898066-5a2b-4304-a26c-697a3fa5c97d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-a7898066-5a2b-4304-a26c-697a3fa5c97d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92905c44-0cfd-4e23-9047-57f88f569342" type="checkbox" ><label class="sk-toggleable__label" for="92905c44-0cfd-4e23-9047-57f88f569342">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6250606-e138-448d-8d7b-a9e7c05f003f" type="checkbox" ><label class="sk-toggleable__label" for="e6250606-e138-448d-8d7b-a9e7c05f003f">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="924f4777-a540-4bca-99a5-4a2f62d1de4d" type="checkbox" ><label class="sk-toggleable__label" for="924f4777-a540-4bca-99a5-4a2f62d1de4d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1d43532-57e2-400f-a1a4-29391914184a" type="checkbox" ><label class="sk-toggleable__label" for="d1d43532-57e2-400f-a1a4-29391914184a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3960314d-3e23-400d-ad16-c011a626ae64" type="checkbox" ><label class="sk-toggleable__label" for="3960314d-3e23-400d-ad16-c011a626ae64">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e1dfbc2-6cb6-44f7-96b5-3f43f05eb3c7" type="checkbox" ><label class="sk-toggleable__label" for="0e1dfbc2-6cb6-44f7-96b5-3f43f05eb3c7">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 {color: black;background-color: white;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 pre{padding: 0;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-toggleable {background-color: white;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-estimator:hover {background-color: #d4ebff;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-item {z-index: 1;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-parallel-item:only-child::after {width: 0;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-aa7adcdd-bb20-4092-b0a8-fe11366f6246" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f3ced73-2185-40f9-8e84-c3cb520cfe2a" type="checkbox" ><label class="sk-toggleable__label" for="5f3ced73-2185-40f9-8e84-c3cb520cfe2a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cad2106-867e-492d-8bf7-5198df498316" type="checkbox" ><label class="sk-toggleable__label" for="9cad2106-867e-492d-8bf7-5198df498316">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="487b06e8-8000-44b9-8230-4679a0db1433" type="checkbox" ><label class="sk-toggleable__label" for="487b06e8-8000-44b9-8230-4679a0db1433">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05cc5ab0-4855-463a-b957-6599b82a3363" type="checkbox" ><label class="sk-toggleable__label" for="05cc5ab0-4855-463a-b957-6599b82a3363">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="096da4f2-fa42-4340-8522-89c38577b19b" type="checkbox" ><label class="sk-toggleable__label" for="096da4f2-fa42-4340-8522-89c38577b19b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3646cfba-7b4b-4c90-9312-c815c50321c3" type="checkbox" ><label class="sk-toggleable__label" for="3646cfba-7b4b-4c90-9312-c815c50321c3">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85b73e2d-7891-4323-8625-26612c3a9acb" type="checkbox" ><label class="sk-toggleable__label" for="85b73e2d-7891-4323-8625-26612c3a9acb">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be039190-34a6-4ec7-96e1-a3a436643a98" type="checkbox" ><label class="sk-toggleable__label" for="be039190-34a6-4ec7-96e1-a3a436643a98">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca {color: black;background-color: white;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca pre{padding: 0;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-toggleable {background-color: white;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-item {z-index: 1;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-parallel-item:only-child::after {width: 0;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca div.sk-container {display: inline-block;position: relative;}</style><div id="sk-14a637a1-a1ff-4c25-bb3e-a4203a6b33ca" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6cfcb42-46f4-48b3-aef6-e666894377d0" type="checkbox" ><label class="sk-toggleable__label" for="d6cfcb42-46f4-48b3-aef6-e666894377d0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d4596c2-513f-40c6-b13f-70c697ac0d96" type="checkbox" ><label class="sk-toggleable__label" for="9d4596c2-513f-40c6-b13f-70c697ac0d96">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0589cafa-bc24-48fe-aeeb-4b2fd5d5611e" type="checkbox" ><label class="sk-toggleable__label" for="0589cafa-bc24-48fe-aeeb-4b2fd5d5611e">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a7ea9fc-165c-4a33-8980-675cb8c11cb6" type="checkbox" ><label class="sk-toggleable__label" for="1a7ea9fc-165c-4a33-8980-675cb8c11cb6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b5b69a6-3379-41a5-aee8-aa0075ac1bb2" type="checkbox" ><label class="sk-toggleable__label" for="1b5b69a6-3379-41a5-aee8-aa0075ac1bb2">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18e5ff3f-d280-44f8-9a30-d4952514ed7a" type="checkbox" ><label class="sk-toggleable__label" for="18e5ff3f-d280-44f8-9a30-d4952514ed7a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67b42ce5-3d84-4294-b807-f438187bcd30" type="checkbox" ><label class="sk-toggleable__label" for="67b42ce5-3d84-4294-b807-f438187bcd30">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed {color: black;background-color: white;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed pre{padding: 0;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-toggleable {background-color: white;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-item {z-index: 1;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-parallel-item:only-child::after {width: 0;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed div.sk-container {display: inline-block;position: relative;}</style><div id="sk-8e2d8f1c-c4f7-47a0-9c10-bd522134cbed" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fae5cf79-5c6c-4eb4-94e7-1934fb37ef9e" type="checkbox" ><label class="sk-toggleable__label" for="fae5cf79-5c6c-4eb4-94e7-1934fb37ef9e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e26a3a7f-5588-4c93-b6ec-c0c426dd186c" type="checkbox" ><label class="sk-toggleable__label" for="e26a3a7f-5588-4c93-b6ec-c0c426dd186c">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67550def-6c15-4a3b-a2d4-c6504a6012bc" type="checkbox" ><label class="sk-toggleable__label" for="67550def-6c15-4a3b-a2d4-c6504a6012bc">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0923838-c7ca-4f08-8adb-058ebc66e92b" type="checkbox" ><label class="sk-toggleable__label" for="f0923838-c7ca-4f08-8adb-058ebc66e92b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce918dd8-5c52-4782-82bc-ee85bb600db6" type="checkbox" ><label class="sk-toggleable__label" for="ce918dd8-5c52-4782-82bc-ee85bb600db6">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd566ac3-5610-49d5-84b6-e5f406737139" type="checkbox" ><label class="sk-toggleable__label" for="dd566ac3-5610-49d5-84b6-e5f406737139">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddd345dc-b388-456d-96bc-0a0d0fb22f55" type="checkbox" ><label class="sk-toggleable__label" for="ddd345dc-b388-456d-96bc-0a0d0fb22f55">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 {color: black;background-color: white;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 pre{padding: 0;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-toggleable {background-color: white;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-item {z-index: 1;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-parallel-item:only-child::after {width: 0;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5866ba0c-4b27-4205-a1e1-d199d853af11 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-5866ba0c-4b27-4205-a1e1-d199d853af11" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fbe0315-ab93-4d77-9b97-bc342187f65e" type="checkbox" ><label class="sk-toggleable__label" for="5fbe0315-ab93-4d77-9b97-bc342187f65e">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcc7bae0-fcf9-4b8f-9c4a-f04f162afdef" type="checkbox" ><label class="sk-toggleable__label" for="dcc7bae0-fcf9-4b8f-9c4a-f04f162afdef">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="872e554b-a554-4772-b5c8-1007e2f2c3e1" type="checkbox" ><label class="sk-toggleable__label" for="872e554b-a554-4772-b5c8-1007e2f2c3e1">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="533413c1-1614-48d6-b9b4-3ff406bc8eba" type="checkbox" ><label class="sk-toggleable__label" for="533413c1-1614-48d6-b9b4-3ff406bc8eba">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dba06325-ea3c-475d-b462-cde634dcf0b6" type="checkbox" ><label class="sk-toggleable__label" for="dba06325-ea3c-475d-b462-cde634dcf0b6">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b139c16a-f147-4701-8661-19d6773dc591" type="checkbox" ><label class="sk-toggleable__label" for="b139c16a-f147-4701-8661-19d6773dc591">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c884dfec-443c-4b54-a7c7-140287dc8f01" type="checkbox" ><label class="sk-toggleable__label" for="c884dfec-443c-4b54-a7c7-140287dc8f01">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2055b595-923e-478b-ad8b-c0f26c99ba8a" type="checkbox" ><label class="sk-toggleable__label" for="2055b595-923e-478b-ad8b-c0f26c99ba8a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a1fc6ea-34d8-452f-bd70-0d707281a690" type="checkbox" ><label class="sk-toggleable__label" for="0a1fc6ea-34d8-452f-bd70-0d707281a690">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="124a2b4a-966e-440e-b75b-67b3fadda305" type="checkbox" ><label class="sk-toggleable__label" for="124a2b4a-966e-440e-b75b-67b3fadda305">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f0be65d-19a0-4cc7-aaca-defdac4987bc" type="checkbox" ><label class="sk-toggleable__label" for="9f0be65d-19a0-4cc7-aaca-defdac4987bc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba88a893-ea3e-4dda-a19c-8730d8e49739" type="checkbox" ><label class="sk-toggleable__label" for="ba88a893-ea3e-4dda-a19c-8730d8e49739">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="259774cf-2267-408a-ab49-01ddfad231cf" type="checkbox" ><label class="sk-toggleable__label" for="259774cf-2267-408a-ab49-01ddfad231cf">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0da41df2-3bb2-4b06-8988-69c72a885711" type="checkbox" ><label class="sk-toggleable__label" for="0da41df2-3bb2-4b06-8988-69c72a885711">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc92157f-e224-468c-880c-b8dad140806a" type="checkbox" ><label class="sk-toggleable__label" for="dc92157f-e224-468c-880c-b8dad140806a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a52e78ea-e235-4a91-807d-ebc0ddd18997" type="checkbox" ><label class="sk-toggleable__label" for="a52e78ea-e235-4a91-807d-ebc0ddd18997">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce35e50></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="753ce418-91cc-4c32-9adb-efaff3250856" type="checkbox" ><label class="sk-toggleable__label" for="753ce418-91cc-4c32-9adb-efaff3250856">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="366a4f06-81db-452a-b997-1b5c98518278" type="checkbox" ><label class="sk-toggleable__label" for="366a4f06-81db-452a-b997-1b5c98518278">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f923ce352e0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2103f7d2-ed80-4fc6-bcbc-a2106dc7f341" type="checkbox" ><label class="sk-toggleable__label" for="2103f7d2-ed80-4fc6-bcbc-a2106dc7f341">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1222c4e6-314e-419f-820d-c43b20a67e0b" type="checkbox" ><label class="sk-toggleable__label" for="1222c4e6-314e-419f-820d-c43b20a67e0b">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48ada27c-c648-4f82-935f-ae308b457ea2" type="checkbox" ><label class="sk-toggleable__label" for="48ada27c-c648-4f82-935f-ae308b457ea2">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.00 seconds, Lasso  Evaluation in 0.49 seconds, Gradient Boosting  Evaluation in 0.66 seconds, Stacking Regressor  Evaluation in 11.57 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  28.287 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
