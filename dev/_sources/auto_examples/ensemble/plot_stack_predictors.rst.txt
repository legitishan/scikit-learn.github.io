
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 {color: black;background-color: white;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 pre{padding: 0;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-toggleable {background-color: white;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-item {z-index: 1;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-parallel-item:only-child::after {width: 0;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5852521b-67b2-4df4-844d-87707a4cd5b6 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-5852521b-67b2-4df4-844d-87707a4cd5b6" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ade46d4-784c-4f3e-aa43-6aa718a64aa2" type="checkbox" ><label class="sk-toggleable__label" for="2ade46d4-784c-4f3e-aa43-6aa718a64aa2">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="034e6e15-73bf-4a34-80e2-85b1ffc361e5" type="checkbox" ><label class="sk-toggleable__label" for="034e6e15-73bf-4a34-80e2-85b1ffc361e5">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dac96ed-ea7b-4eb9-b1a8-83a2609a6fcc" type="checkbox" ><label class="sk-toggleable__label" for="0dac96ed-ea7b-4eb9-b1a8-83a2609a6fcc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc21365d-995f-4838-83da-847b3306a6a4" type="checkbox" ><label class="sk-toggleable__label" for="cc21365d-995f-4838-83da-847b3306a6a4">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b82d2da8-948a-4d82-96d9-540fcb827373" type="checkbox" ><label class="sk-toggleable__label" for="b82d2da8-948a-4d82-96d9-540fcb827373">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f {color: black;background-color: white;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f pre{padding: 0;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-toggleable {background-color: white;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-estimator:hover {background-color: #d4ebff;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-item {z-index: 1;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-parallel-item:only-child::after {width: 0;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e679e8b6-910c-4ed6-995a-157de7e73a0f div.sk-container {display: inline-block;position: relative;}</style><div id="sk-e679e8b6-910c-4ed6-995a-157de7e73a0f" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88d0a3b6-29df-4c1a-b1d9-3bf43075296b" type="checkbox" ><label class="sk-toggleable__label" for="88d0a3b6-29df-4c1a-b1d9-3bf43075296b">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2587eb2e-59e8-44e8-8800-636eb485bd90" type="checkbox" ><label class="sk-toggleable__label" for="2587eb2e-59e8-44e8-8800-636eb485bd90">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2dd60f1b-8940-4235-8f48-9c190e9e09aa" type="checkbox" ><label class="sk-toggleable__label" for="2dd60f1b-8940-4235-8f48-9c190e9e09aa">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc4422d3-2255-411e-b753-23c3315b928f" type="checkbox" ><label class="sk-toggleable__label" for="bc4422d3-2255-411e-b753-23c3315b928f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd4243c4-cdb1-44a5-a7f1-dd2297cc8634" type="checkbox" ><label class="sk-toggleable__label" for="dd4243c4-cdb1-44a5-a7f1-dd2297cc8634">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b58fc351-0018-478a-b642-33b247797b03" type="checkbox" ><label class="sk-toggleable__label" for="b58fc351-0018-478a-b642-33b247797b03">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e {color: black;background-color: white;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e pre{padding: 0;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-toggleable {background-color: white;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-estimator:hover {background-color: #d4ebff;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-item {z-index: 1;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-parallel-item:only-child::after {width: 0;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5d92719a-c9c4-4929-85c3-81028b6bc77e div.sk-container {display: inline-block;position: relative;}</style><div id="sk-5d92719a-c9c4-4929-85c3-81028b6bc77e" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8e13f5f-2ab9-455d-8ebe-6a837e7b0347" type="checkbox" ><label class="sk-toggleable__label" for="d8e13f5f-2ab9-455d-8ebe-6a837e7b0347">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ba61677-a31e-4477-b564-f1fd59f176a8" type="checkbox" ><label class="sk-toggleable__label" for="2ba61677-a31e-4477-b564-f1fd59f176a8">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39d852e9-1e6d-4bb8-bb24-19691fb4be82" type="checkbox" ><label class="sk-toggleable__label" for="39d852e9-1e6d-4bb8-bb24-19691fb4be82">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a237d830-46d3-4859-9c1d-26a37ed7d3c8" type="checkbox" ><label class="sk-toggleable__label" for="a237d830-46d3-4859-9c1d-26a37ed7d3c8">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4135f01a-9cf9-4e4b-9079-3c7275572949" type="checkbox" ><label class="sk-toggleable__label" for="4135f01a-9cf9-4e4b-9079-3c7275572949">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ff734b2-fc94-40a1-831f-e7cd1e6f096e" type="checkbox" ><label class="sk-toggleable__label" for="7ff734b2-fc94-40a1-831f-e7cd1e6f096e">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bc097b8-befb-4ee3-88dc-0ab002230ec6" type="checkbox" ><label class="sk-toggleable__label" for="5bc097b8-befb-4ee3-88dc-0ab002230ec6">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc20eed6-7f3d-4a34-8ee7-6020e350be38" type="checkbox" ><label class="sk-toggleable__label" for="dc20eed6-7f3d-4a34-8ee7-6020e350be38">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 {color: black;background-color: white;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 pre{padding: 0;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-toggleable {background-color: white;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-estimator:hover {background-color: #d4ebff;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-item {z-index: 1;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-parallel-item:only-child::after {width: 0;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-42e734d7-ee4c-4862-9107-b9a136fd9a53 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-42e734d7-ee4c-4862-9107-b9a136fd9a53" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce341fd1-a6d1-43e7-9996-158d2a897e93" type="checkbox" ><label class="sk-toggleable__label" for="ce341fd1-a6d1-43e7-9996-158d2a897e93">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b74d4c3e-1304-4135-8f49-ccb5a2943d67" type="checkbox" ><label class="sk-toggleable__label" for="b74d4c3e-1304-4135-8f49-ccb5a2943d67">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c495c7a-3b31-4c87-a459-a4e15dafb2f2" type="checkbox" ><label class="sk-toggleable__label" for="4c495c7a-3b31-4c87-a459-a4e15dafb2f2">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45fbab91-670d-4a4f-9368-8b1bfd8d9186" type="checkbox" ><label class="sk-toggleable__label" for="45fbab91-670d-4a4f-9368-8b1bfd8d9186">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d300058-2411-4ed9-90bb-79c058e9e3c0" type="checkbox" ><label class="sk-toggleable__label" for="5d300058-2411-4ed9-90bb-79c058e9e3c0">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ca40e8a-43ff-4fb4-a121-80c7842c5dac" type="checkbox" ><label class="sk-toggleable__label" for="0ca40e8a-43ff-4fb4-a121-80c7842c5dac">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07131b7d-3966-4eab-b10b-e40a952e3af6" type="checkbox" ><label class="sk-toggleable__label" for="07131b7d-3966-4eab-b10b-e40a952e3af6">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a {color: black;background-color: white;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a pre{padding: 0;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-toggleable {background-color: white;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-estimator:hover {background-color: #d4ebff;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-item {z-index: 1;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-parallel-item:only-child::after {width: 0;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-23275ad3-8b96-4e03-8fe2-072b20c0773a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-23275ad3-8b96-4e03-8fe2-072b20c0773a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7125fff-f5e4-4d24-b5fe-fa5aad19a047" type="checkbox" ><label class="sk-toggleable__label" for="d7125fff-f5e4-4d24-b5fe-fa5aad19a047">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81f9c2da-8fac-4c7d-a926-61baf33b8d3e" type="checkbox" ><label class="sk-toggleable__label" for="81f9c2da-8fac-4c7d-a926-61baf33b8d3e">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e519a1c5-b8ce-4650-a1b8-62af7cc86a17" type="checkbox" ><label class="sk-toggleable__label" for="e519a1c5-b8ce-4650-a1b8-62af7cc86a17">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="278f0f25-1aab-4127-a0bb-a5f5bc711a44" type="checkbox" ><label class="sk-toggleable__label" for="278f0f25-1aab-4127-a0bb-a5f5bc711a44">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da02ce77-be0e-4125-808a-bb44ca8c7e13" type="checkbox" ><label class="sk-toggleable__label" for="da02ce77-be0e-4125-808a-bb44ca8c7e13">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40156cf6-e7ce-4d98-8fe6-3a59d99be45d" type="checkbox" ><label class="sk-toggleable__label" for="40156cf6-e7ce-4d98-8fe6-3a59d99be45d">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be1d3b9c-46ce-4d36-9124-3f946bce075b" type="checkbox" ><label class="sk-toggleable__label" for="be1d3b9c-46ce-4d36-9124-3f946bce075b">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 {color: black;background-color: white;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 pre{padding: 0;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-toggleable {background-color: white;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-item {z-index: 1;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-parallel-item:only-child::after {width: 0;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-dc2ea2f2-aa10-4fed-b7f9-f83779cdabd6" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cc3bcad-5712-4206-be28-c2fccb238d71" type="checkbox" ><label class="sk-toggleable__label" for="3cc3bcad-5712-4206-be28-c2fccb238d71">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13a1deae-74b3-4ed2-9dc7-a6f0518f4ae5" type="checkbox" ><label class="sk-toggleable__label" for="13a1deae-74b3-4ed2-9dc7-a6f0518f4ae5">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="600095d9-610a-4e1a-8808-32fbec2f6c10" type="checkbox" ><label class="sk-toggleable__label" for="600095d9-610a-4e1a-8808-32fbec2f6c10">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4642d70-df89-4706-8293-eb87b3620868" type="checkbox" ><label class="sk-toggleable__label" for="a4642d70-df89-4706-8293-eb87b3620868">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="336aa168-1c4e-4fa4-b596-4e1366d89730" type="checkbox" ><label class="sk-toggleable__label" for="336aa168-1c4e-4fa4-b596-4e1366d89730">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81c7ea34-ca60-445a-9dd6-c4f1e5efdb37" type="checkbox" ><label class="sk-toggleable__label" for="81c7ea34-ca60-445a-9dd6-c4f1e5efdb37">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f61e47e3-eae8-4b04-969f-2292e86bf37e" type="checkbox" ><label class="sk-toggleable__label" for="f61e47e3-eae8-4b04-969f-2292e86bf37e">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7edff95-f089-4fd6-9628-d21a41367a82" type="checkbox" ><label class="sk-toggleable__label" for="c7edff95-f089-4fd6-9628-d21a41367a82">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1bec6fd-5d00-4ad2-8583-cd2dce351b78" type="checkbox" ><label class="sk-toggleable__label" for="f1bec6fd-5d00-4ad2-8583-cd2dce351b78">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9975b98e-ea50-433c-a082-d8ddbba05535" type="checkbox" ><label class="sk-toggleable__label" for="9975b98e-ea50-433c-a082-d8ddbba05535">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8effaec-86c6-4874-b835-ca4c46101647" type="checkbox" ><label class="sk-toggleable__label" for="a8effaec-86c6-4874-b835-ca4c46101647">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9290757c-fb97-48af-8d16-a99324641cfb" type="checkbox" ><label class="sk-toggleable__label" for="9290757c-fb97-48af-8d16-a99324641cfb">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32ac585b-ae38-4f1f-b162-2e28c46979fa" type="checkbox" ><label class="sk-toggleable__label" for="32ac585b-ae38-4f1f-b162-2e28c46979fa">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d409d67-84a3-4c8f-83ef-7a00224de2ae" type="checkbox" ><label class="sk-toggleable__label" for="0d409d67-84a3-4c8f-83ef-7a00224de2ae">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8b42ee3-1e78-4f0f-8d21-bdd182c3ecee" type="checkbox" ><label class="sk-toggleable__label" for="b8b42ee3-1e78-4f0f-8d21-bdd182c3ecee">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94e5835c-2ace-4823-b24f-6f5e254a6be9" type="checkbox" ><label class="sk-toggleable__label" for="94e5835c-2ace-4823-b24f-6f5e254a6be9">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b61a00></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2a97fa5-d820-4dda-a25a-217fae866c7f" type="checkbox" ><label class="sk-toggleable__label" for="c2a97fa5-d820-4dda-a25a-217fae866c7f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c965d3cd-d1f4-428b-8592-595a6708cda1" type="checkbox" ><label class="sk-toggleable__label" for="c965d3cd-d1f4-428b-8592-595a6708cda1">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fd4a5b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26ab7103-98fc-4d60-8a4c-e9c082eeaf74" type="checkbox" ><label class="sk-toggleable__label" for="26ab7103-98fc-4d60-8a4c-e9c082eeaf74">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f89ad74d-8902-4f02-a8be-decaed0c356f" type="checkbox" ><label class="sk-toggleable__label" for="f89ad74d-8902-4f02-a8be-decaed0c356f">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="510f5ec3-3afd-4d5f-9a52-af7afb14912b" type="checkbox" ><label class="sk-toggleable__label" for="510f5ec3-3afd-4d5f-9a52-af7afb14912b">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.08 seconds, Lasso  Evaluation in 0.71 seconds, Gradient Boosting  Evaluation in 0.81 seconds, Stacking Regressor  Evaluation in 14.91 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  36.463 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
