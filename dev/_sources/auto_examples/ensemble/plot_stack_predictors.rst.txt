
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1af937f0-41ba-4f0b-9d12-73842006a721 {color: black;background-color: white;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 pre{padding: 0;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-toggleable {background-color: white;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-item {z-index: 1;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-parallel-item:only-child::after {width: 0;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1af937f0-41ba-4f0b-9d12-73842006a721 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-1af937f0-41ba-4f0b-9d12-73842006a721" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1ebf1de-22ba-43b4-955b-50155920e1cf" type="checkbox" ><label class="sk-toggleable__label" for="c1ebf1de-22ba-43b4-955b-50155920e1cf">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63bdf3e0-a797-4874-9339-d7a275ace066" type="checkbox" ><label class="sk-toggleable__label" for="63bdf3e0-a797-4874-9339-d7a275ace066">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe9df092-0813-437e-9574-3f6574cc434a" type="checkbox" ><label class="sk-toggleable__label" for="fe9df092-0813-437e-9574-3f6574cc434a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcf542f8-d86e-4d02-a02b-0951371c689e" type="checkbox" ><label class="sk-toggleable__label" for="fcf542f8-d86e-4d02-a02b-0951371c689e">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7ea3ec1-82ba-4b7c-b47e-c30a8fc7bd01" type="checkbox" ><label class="sk-toggleable__label" for="b7ea3ec1-82ba-4b7c-b47e-c30a8fc7bd01">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba {color: black;background-color: white;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba pre{padding: 0;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-toggleable {background-color: white;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-estimator:hover {background-color: #d4ebff;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-item {z-index: 1;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-parallel-item:only-child::after {width: 0;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba div.sk-container {display: inline-block;position: relative;}</style><div id="sk-d57aefd6-f0f0-4e24-81b6-d77ab44523ba" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3a74df8-b7e8-4c72-8b1b-0d5443e10d1c" type="checkbox" ><label class="sk-toggleable__label" for="c3a74df8-b7e8-4c72-8b1b-0d5443e10d1c">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e324c8cf-37c7-4c28-9bc2-696d3debd529" type="checkbox" ><label class="sk-toggleable__label" for="e324c8cf-37c7-4c28-9bc2-696d3debd529">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bae145cb-59c0-4f5d-beac-d0872b281e5a" type="checkbox" ><label class="sk-toggleable__label" for="bae145cb-59c0-4f5d-beac-d0872b281e5a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="312c0a93-5612-4521-b19a-c25209ab609d" type="checkbox" ><label class="sk-toggleable__label" for="312c0a93-5612-4521-b19a-c25209ab609d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c0a0a75-39b5-4ae8-a40c-595b4ce0451c" type="checkbox" ><label class="sk-toggleable__label" for="0c0a0a75-39b5-4ae8-a40c-595b4ce0451c">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="392c3736-1135-4e0d-885b-35024906915f" type="checkbox" ><label class="sk-toggleable__label" for="392c3736-1135-4e0d-885b-35024906915f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 {color: black;background-color: white;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 pre{padding: 0;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-toggleable {background-color: white;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-item {z-index: 1;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-parallel-item:only-child::after {width: 0;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-66bafd87-8a1e-4325-b780-f4fa73a275d9 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-66bafd87-8a1e-4325-b780-f4fa73a275d9" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c80f53aa-3036-4bf3-aa19-8856a59b2f5f" type="checkbox" ><label class="sk-toggleable__label" for="c80f53aa-3036-4bf3-aa19-8856a59b2f5f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bff7b87e-c0c5-4a39-b789-abd638b7f7a2" type="checkbox" ><label class="sk-toggleable__label" for="bff7b87e-c0c5-4a39-b789-abd638b7f7a2">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83e77483-a2cb-40ab-8e34-7c4b072811cc" type="checkbox" ><label class="sk-toggleable__label" for="83e77483-a2cb-40ab-8e34-7c4b072811cc">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e9f9c8a-9175-4c76-ae91-2fb0b8e72320" type="checkbox" ><label class="sk-toggleable__label" for="3e9f9c8a-9175-4c76-ae91-2fb0b8e72320">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8e0c580-b654-4be4-8fef-afc2d13b864e" type="checkbox" ><label class="sk-toggleable__label" for="f8e0c580-b654-4be4-8fef-afc2d13b864e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2c1aef0-7300-4c4c-be27-b5e08ce65f7c" type="checkbox" ><label class="sk-toggleable__label" for="b2c1aef0-7300-4c4c-be27-b5e08ce65f7c">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aec5a80b-428c-4d31-8d44-03ec5761b80d" type="checkbox" ><label class="sk-toggleable__label" for="aec5a80b-428c-4d31-8d44-03ec5761b80d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b485f7d-a34e-4091-b5f7-be43f8cb8235" type="checkbox" ><label class="sk-toggleable__label" for="1b485f7d-a34e-4091-b5f7-be43f8cb8235">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 {color: black;background-color: white;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 pre{padding: 0;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-toggleable {background-color: white;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-estimator:hover {background-color: #d4ebff;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-item {z-index: 1;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-parallel-item:only-child::after {width: 0;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-adb88bd1-58d9-476a-9bbc-f45f41147356 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-adb88bd1-58d9-476a-9bbc-f45f41147356" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5891c20-8796-44b9-8cec-e42b1f24b9fb" type="checkbox" ><label class="sk-toggleable__label" for="b5891c20-8796-44b9-8cec-e42b1f24b9fb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee5d5350-a0cd-46f0-80dc-6221e79c4d82" type="checkbox" ><label class="sk-toggleable__label" for="ee5d5350-a0cd-46f0-80dc-6221e79c4d82">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e0c40ef-daad-4a89-a062-f255af558bbb" type="checkbox" ><label class="sk-toggleable__label" for="1e0c40ef-daad-4a89-a062-f255af558bbb">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00e71991-1519-4ef5-b762-378dbc9e892f" type="checkbox" ><label class="sk-toggleable__label" for="00e71991-1519-4ef5-b762-378dbc9e892f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe711b16-29f0-4afa-8624-614a50340809" type="checkbox" ><label class="sk-toggleable__label" for="fe711b16-29f0-4afa-8624-614a50340809">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b69e96c3-501d-4e7b-868c-e8877c55a260" type="checkbox" ><label class="sk-toggleable__label" for="b69e96c3-501d-4e7b-868c-e8877c55a260">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="112d5436-fc8b-44bd-9e1e-2786d9394197" type="checkbox" ><label class="sk-toggleable__label" for="112d5436-fc8b-44bd-9e1e-2786d9394197">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c4323b29-eb26-4bcd-9968-01624a7671fe {color: black;background-color: white;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe pre{padding: 0;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-toggleable {background-color: white;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-estimator:hover {background-color: #d4ebff;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-item {z-index: 1;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-parallel-item:only-child::after {width: 0;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c4323b29-eb26-4bcd-9968-01624a7671fe div.sk-container {display: inline-block;position: relative;}</style><div id="sk-c4323b29-eb26-4bcd-9968-01624a7671fe" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8406fe06-76a4-4f61-8b98-74099098d54d" type="checkbox" ><label class="sk-toggleable__label" for="8406fe06-76a4-4f61-8b98-74099098d54d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="527742dc-face-4561-87f2-11907e276096" type="checkbox" ><label class="sk-toggleable__label" for="527742dc-face-4561-87f2-11907e276096">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc953d06-0974-459e-9a10-90516ed809f0" type="checkbox" ><label class="sk-toggleable__label" for="cc953d06-0974-459e-9a10-90516ed809f0">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7777ae13-7e31-4c9d-b07c-5624a5f79cfd" type="checkbox" ><label class="sk-toggleable__label" for="7777ae13-7e31-4c9d-b07c-5624a5f79cfd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="930e2bcf-2360-492d-8eb8-f425a2460acc" type="checkbox" ><label class="sk-toggleable__label" for="930e2bcf-2360-492d-8eb8-f425a2460acc">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f0afb29-7f3a-48ff-a3ff-e00c0a425650" type="checkbox" ><label class="sk-toggleable__label" for="2f0afb29-7f3a-48ff-a3ff-e00c0a425650">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21753701-f9fa-448e-a10e-c05559b72b9a" type="checkbox" ><label class="sk-toggleable__label" for="21753701-f9fa-448e-a10e-c05559b72b9a">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 {color: black;background-color: white;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 pre{padding: 0;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-toggleable {background-color: white;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-item {z-index: 1;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-parallel-item:only-child::after {width: 0;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9d69998f-3d9e-4760-a108-939c5cac5e75 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-9d69998f-3d9e-4760-a108-939c5cac5e75" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0adefaa4-758e-4fcb-b73c-6910ed871743" type="checkbox" ><label class="sk-toggleable__label" for="0adefaa4-758e-4fcb-b73c-6910ed871743">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66d420c4-62cb-4447-8b65-43fb4782a661" type="checkbox" ><label class="sk-toggleable__label" for="66d420c4-62cb-4447-8b65-43fb4782a661">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3861e93f-ebff-457d-9c46-6ed7bba39050" type="checkbox" ><label class="sk-toggleable__label" for="3861e93f-ebff-457d-9c46-6ed7bba39050">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb1fb417-216c-4c73-bdec-a6cb3e653c99" type="checkbox" ><label class="sk-toggleable__label" for="fb1fb417-216c-4c73-bdec-a6cb3e653c99">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24138d9c-5fe6-4d16-8c26-24ae1efc7d9f" type="checkbox" ><label class="sk-toggleable__label" for="24138d9c-5fe6-4d16-8c26-24ae1efc7d9f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16033218-03ce-4e70-a19a-2643d4098df7" type="checkbox" ><label class="sk-toggleable__label" for="16033218-03ce-4e70-a19a-2643d4098df7">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6aca9f8-6b56-4fdd-920d-5ed82cba6552" type="checkbox" ><label class="sk-toggleable__label" for="f6aca9f8-6b56-4fdd-920d-5ed82cba6552">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad5e0bc8-71e0-4754-a919-507667b62d33" type="checkbox" ><label class="sk-toggleable__label" for="ad5e0bc8-71e0-4754-a919-507667b62d33">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa2919d4-2183-43a8-badb-b141ccf8ff1c" type="checkbox" ><label class="sk-toggleable__label" for="aa2919d4-2183-43a8-badb-b141ccf8ff1c">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1da2ffa4-260d-4597-9d3b-53edec7f070e" type="checkbox" ><label class="sk-toggleable__label" for="1da2ffa4-260d-4597-9d3b-53edec7f070e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f392b5a3-6651-4286-ac80-1c5ebb161894" type="checkbox" ><label class="sk-toggleable__label" for="f392b5a3-6651-4286-ac80-1c5ebb161894">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8abd6a8-5b6f-4afb-b5d1-a23728c4a691" type="checkbox" ><label class="sk-toggleable__label" for="e8abd6a8-5b6f-4afb-b5d1-a23728c4a691">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31a3741c-982b-4ef1-9611-a9faec6545c0" type="checkbox" ><label class="sk-toggleable__label" for="31a3741c-982b-4ef1-9611-a9faec6545c0">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebbe095f-ffef-4152-aab9-f2fc5dbca7c7" type="checkbox" ><label class="sk-toggleable__label" for="ebbe095f-ffef-4152-aab9-f2fc5dbca7c7">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09c3057f-3f2e-482a-8994-55e7f4cc3bd6" type="checkbox" ><label class="sk-toggleable__label" for="09c3057f-3f2e-482a-8994-55e7f4cc3bd6">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4e9748c-7c2f-44a3-90a6-941e448a6840" type="checkbox" ><label class="sk-toggleable__label" for="a4e9748c-7c2f-44a3-90a6-941e448a6840">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eb4f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e57e8b00-dfc7-4c11-953c-be4e44de8184" type="checkbox" ><label class="sk-toggleable__label" for="e57e8b00-dfc7-4c11-953c-be4e44de8184">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0541584-2d6d-41d5-a4d8-520e5361e9f1" type="checkbox" ><label class="sk-toggleable__label" for="f0541584-2d6d-41d5-a4d8-520e5361e9f1">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fb5605eba90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09994ad9-67fd-4726-beb4-49556639544a" type="checkbox" ><label class="sk-toggleable__label" for="09994ad9-67fd-4726-beb4-49556639544a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f0767e5-b1f9-494d-89b2-3eb376c72339" type="checkbox" ><label class="sk-toggleable__label" for="6f0767e5-b1f9-494d-89b2-3eb376c72339">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="913c2667-d249-41b5-9825-3f6677e0fe08" type="checkbox" ><label class="sk-toggleable__label" for="913c2667-d249-41b5-9825-3f6677e0fe08">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.27 seconds, Lasso  Evaluation in 0.66 seconds, Gradient Boosting  Evaluation in 0.77 seconds, Stacking Regressor  Evaluation in 13.98 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  34.000 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
