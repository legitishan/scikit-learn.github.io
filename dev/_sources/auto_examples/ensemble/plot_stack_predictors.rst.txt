
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6065a290-336c-4818-a1a3-06d7e93740fd {color: black;background-color: white;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd pre{padding: 0;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-toggleable {background-color: white;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-item {z-index: 1;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-parallel-item:only-child::after {width: 0;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6065a290-336c-4818-a1a3-06d7e93740fd div.sk-container {display: inline-block;position: relative;}</style><div id="sk-6065a290-336c-4818-a1a3-06d7e93740fd" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cc0df9d-7072-4fbc-bcba-911cc047d87a" type="checkbox" ><label class="sk-toggleable__label" for="8cc0df9d-7072-4fbc-bcba-911cc047d87a">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5aae429-04c0-4893-8b7e-b5b6da00b698" type="checkbox" ><label class="sk-toggleable__label" for="a5aae429-04c0-4893-8b7e-b5b6da00b698">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eab3ea0-d5ab-47cc-bc96-e6eaa745edd9" type="checkbox" ><label class="sk-toggleable__label" for="0eab3ea0-d5ab-47cc-bc96-e6eaa745edd9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca71e6f1-bd27-4c56-bae0-684fda185616" type="checkbox" ><label class="sk-toggleable__label" for="ca71e6f1-bd27-4c56-bae0-684fda185616">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47dffe3b-6988-443f-8236-45cd65692400" type="checkbox" ><label class="sk-toggleable__label" for="47dffe3b-6988-443f-8236-45cd65692400">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 {color: black;background-color: white;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 pre{padding: 0;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-toggleable {background-color: white;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-estimator:hover {background-color: #d4ebff;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-item {z-index: 1;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-parallel-item:only-child::after {width: 0;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-47fa4e9d-9553-46cd-b9cb-d71b3b4b8440" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ca814d4-142b-4dc7-8d29-fa92dd78e44b" type="checkbox" ><label class="sk-toggleable__label" for="4ca814d4-142b-4dc7-8d29-fa92dd78e44b">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="617eef43-9de1-4937-a3e5-d56262a5f3a9" type="checkbox" ><label class="sk-toggleable__label" for="617eef43-9de1-4937-a3e5-d56262a5f3a9">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="806111ba-010d-427a-8177-361f3be5b875" type="checkbox" ><label class="sk-toggleable__label" for="806111ba-010d-427a-8177-361f3be5b875">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e97e0a5e-cf80-4618-a7a2-11e14def9235" type="checkbox" ><label class="sk-toggleable__label" for="e97e0a5e-cf80-4618-a7a2-11e14def9235">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b8c416c-0b1b-4810-a002-cc76d2d5c66f" type="checkbox" ><label class="sk-toggleable__label" for="7b8c416c-0b1b-4810-a002-cc76d2d5c66f">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e52039e-919b-4012-9c3c-565eb08e1e1f" type="checkbox" ><label class="sk-toggleable__label" for="9e52039e-919b-4012-9c3c-565eb08e1e1f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f {color: black;background-color: white;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f pre{padding: 0;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-toggleable {background-color: white;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-estimator:hover {background-color: #d4ebff;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-item {z-index: 1;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-parallel-item:only-child::after {width: 0;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f div.sk-container {display: inline-block;position: relative;}</style><div id="sk-2331cf2b-9678-4aed-8761-bbc8e53e3c6f" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b457f09-ae50-4516-8e2c-de644ad7db93" type="checkbox" ><label class="sk-toggleable__label" for="3b457f09-ae50-4516-8e2c-de644ad7db93">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7794d1dd-8f4f-41ae-948e-78d38e19bd16" type="checkbox" ><label class="sk-toggleable__label" for="7794d1dd-8f4f-41ae-948e-78d38e19bd16">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9427e351-51b5-47dc-a367-6b8289a31a51" type="checkbox" ><label class="sk-toggleable__label" for="9427e351-51b5-47dc-a367-6b8289a31a51">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d0cdd32-6fd4-4b2a-a8d3-f513f26f129e" type="checkbox" ><label class="sk-toggleable__label" for="9d0cdd32-6fd4-4b2a-a8d3-f513f26f129e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="198419ae-eda8-47e8-ab7b-8cf893c4a271" type="checkbox" ><label class="sk-toggleable__label" for="198419ae-eda8-47e8-ab7b-8cf893c4a271">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea85eb65-64ea-4856-9c14-6bffd7faaa32" type="checkbox" ><label class="sk-toggleable__label" for="ea85eb65-64ea-4856-9c14-6bffd7faaa32">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af4ae507-e54f-4612-adbe-b2a482ac84f5" type="checkbox" ><label class="sk-toggleable__label" for="af4ae507-e54f-4612-adbe-b2a482ac84f5">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77eb9bb0-9764-40a9-81ee-6ebdd07df55c" type="checkbox" ><label class="sk-toggleable__label" for="77eb9bb0-9764-40a9-81ee-6ebdd07df55c">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a1403945-8b68-4963-8665-60314e7f8a6a {color: black;background-color: white;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a pre{padding: 0;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-toggleable {background-color: white;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-estimator:hover {background-color: #d4ebff;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-item {z-index: 1;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-parallel-item:only-child::after {width: 0;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a1403945-8b68-4963-8665-60314e7f8a6a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-a1403945-8b68-4963-8665-60314e7f8a6a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1561406c-1623-4f08-b463-ab5059200cfe" type="checkbox" ><label class="sk-toggleable__label" for="1561406c-1623-4f08-b463-ab5059200cfe">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11a3a662-b9b4-4ac9-aaed-ecc5bcc6da91" type="checkbox" ><label class="sk-toggleable__label" for="11a3a662-b9b4-4ac9-aaed-ecc5bcc6da91">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28d7bcd4-22bd-4bc9-9c1a-0c3c7aeb29e4" type="checkbox" ><label class="sk-toggleable__label" for="28d7bcd4-22bd-4bc9-9c1a-0c3c7aeb29e4">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5613f31-e754-4f57-9252-ada1ca285071" type="checkbox" ><label class="sk-toggleable__label" for="e5613f31-e754-4f57-9252-ada1ca285071">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="606268e7-d11b-4b22-86c5-39d72865f863" type="checkbox" ><label class="sk-toggleable__label" for="606268e7-d11b-4b22-86c5-39d72865f863">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fef1dcfe-ac08-42d8-87e5-aa1225b8d3ab" type="checkbox" ><label class="sk-toggleable__label" for="fef1dcfe-ac08-42d8-87e5-aa1225b8d3ab">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d96c954-94b4-4cae-85b7-5daca7ba332a" type="checkbox" ><label class="sk-toggleable__label" for="7d96c954-94b4-4cae-85b7-5daca7ba332a">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 {color: black;background-color: white;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 pre{padding: 0;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-toggleable {background-color: white;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-item {z-index: 1;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-parallel-item:only-child::after {width: 0;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4fb266dd-6d5e-4aca-88a9-cc4074197312 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-4fb266dd-6d5e-4aca-88a9-cc4074197312" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f87d0f9-c1cb-4c08-8c69-b47f95453d5e" type="checkbox" ><label class="sk-toggleable__label" for="4f87d0f9-c1cb-4c08-8c69-b47f95453d5e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="598fa6bd-6054-45b6-a57b-207359d7e0bf" type="checkbox" ><label class="sk-toggleable__label" for="598fa6bd-6054-45b6-a57b-207359d7e0bf">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21b4a010-d42b-4f8f-87b3-fed3bb99373a" type="checkbox" ><label class="sk-toggleable__label" for="21b4a010-d42b-4f8f-87b3-fed3bb99373a">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a036fcda-a8fd-4bd5-9db5-f086c7643b43" type="checkbox" ><label class="sk-toggleable__label" for="a036fcda-a8fd-4bd5-9db5-f086c7643b43">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b07bc77-2547-44f9-9ce6-1a278244c4c9" type="checkbox" ><label class="sk-toggleable__label" for="4b07bc77-2547-44f9-9ce6-1a278244c4c9">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2c30124-ae1a-48f8-868a-73d4c2cbd93a" type="checkbox" ><label class="sk-toggleable__label" for="c2c30124-ae1a-48f8-868a-73d4c2cbd93a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a55aa3ed-a1a7-412d-addc-845f92e927d5" type="checkbox" ><label class="sk-toggleable__label" for="a55aa3ed-a1a7-412d-addc-845f92e927d5">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf {color: black;background-color: white;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf pre{padding: 0;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-toggleable {background-color: white;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-estimator:hover {background-color: #d4ebff;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-item {z-index: 1;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-parallel-item:only-child::after {width: 0;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf div.sk-container {display: inline-block;position: relative;}</style><div id="sk-f2120bc5-6b5a-4414-a9d4-38f1d4c2a9cf" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e6f51d1-45d1-4ff6-9e7c-a1c40c558bdf" type="checkbox" ><label class="sk-toggleable__label" for="5e6f51d1-45d1-4ff6-9e7c-a1c40c558bdf">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="971e6581-b9aa-49ed-94dc-31b458a73984" type="checkbox" ><label class="sk-toggleable__label" for="971e6581-b9aa-49ed-94dc-31b458a73984">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b50af168-6b74-4f0f-b69a-206b22346c20" type="checkbox" ><label class="sk-toggleable__label" for="b50af168-6b74-4f0f-b69a-206b22346c20">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b96679e-c72d-4348-943a-2a9b532ebed7" type="checkbox" ><label class="sk-toggleable__label" for="9b96679e-c72d-4348-943a-2a9b532ebed7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="646eeb24-8f7f-42c0-9499-5639baa85745" type="checkbox" ><label class="sk-toggleable__label" for="646eeb24-8f7f-42c0-9499-5639baa85745">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7073ffa-e407-4481-99d4-ffc565a035d5" type="checkbox" ><label class="sk-toggleable__label" for="d7073ffa-e407-4481-99d4-ffc565a035d5">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94c53e09-1122-453c-b29b-5c32e49d23df" type="checkbox" ><label class="sk-toggleable__label" for="94c53e09-1122-453c-b29b-5c32e49d23df">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfde3d3d-2265-4b59-b6a8-9dccc8409550" type="checkbox" ><label class="sk-toggleable__label" for="cfde3d3d-2265-4b59-b6a8-9dccc8409550">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d9ee62d-8a87-4afa-b533-f1c880c82a02" type="checkbox" ><label class="sk-toggleable__label" for="8d9ee62d-8a87-4afa-b533-f1c880c82a02">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71e93b31-e15b-4ebe-94c4-7963a7300895" type="checkbox" ><label class="sk-toggleable__label" for="71e93b31-e15b-4ebe-94c4-7963a7300895">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e2fea48-7343-4ced-9f4b-f0c741e70841" type="checkbox" ><label class="sk-toggleable__label" for="0e2fea48-7343-4ced-9f4b-f0c741e70841">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70dd6a2a-a2a6-456f-ad6e-518d9fd36813" type="checkbox" ><label class="sk-toggleable__label" for="70dd6a2a-a2a6-456f-ad6e-518d9fd36813">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15b49dda-24de-44d6-b85e-28523440fcf6" type="checkbox" ><label class="sk-toggleable__label" for="15b49dda-24de-44d6-b85e-28523440fcf6">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f95226b-02be-40cc-94ca-669bdc1a9596" type="checkbox" ><label class="sk-toggleable__label" for="1f95226b-02be-40cc-94ca-669bdc1a9596">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40cedf93-44d0-4f28-b108-dd8db1e28f74" type="checkbox" ><label class="sk-toggleable__label" for="40cedf93-44d0-4f28-b108-dd8db1e28f74">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ed619c7-fd16-48b2-8ec0-27c0910d0193" type="checkbox" ><label class="sk-toggleable__label" for="6ed619c7-fd16-48b2-8ec0-27c0910d0193">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214490></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32babbd2-c023-4da0-973c-f1df571ab38c" type="checkbox" ><label class="sk-toggleable__label" for="32babbd2-c023-4da0-973c-f1df571ab38c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b5681c8-3a19-4ddb-b24f-3cbd2d1dbc56" type="checkbox" ><label class="sk-toggleable__label" for="4b5681c8-3a19-4ddb-b24f-3cbd2d1dbc56">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1006214130></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9a0e5f3-1b10-496b-9975-9db9f17d7100" type="checkbox" ><label class="sk-toggleable__label" for="c9a0e5f3-1b10-496b-9975-9db9f17d7100">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6be88ee8-1444-4944-bd72-28e984b051c0" type="checkbox" ><label class="sk-toggleable__label" for="6be88ee8-1444-4944-bd72-28e984b051c0">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3e44c42-0d81-441c-a0b7-b7b8aaa906bd" type="checkbox" ><label class="sk-toggleable__label" for="a3e44c42-0d81-441c-a0b7-b7b8aaa906bd">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 0.96 seconds, Lasso  Evaluation in 0.54 seconds, Gradient Boosting  Evaluation in 0.64 seconds, Stacking Regressor  Evaluation in 12.22 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  29.249 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
