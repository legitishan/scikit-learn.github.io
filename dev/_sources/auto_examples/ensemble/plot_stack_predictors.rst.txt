
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb {color: black;background-color: white;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb pre{padding: 0;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-toggleable {background-color: white;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-estimator:hover {background-color: #d4ebff;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-item {z-index: 1;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-parallel-item:only-child::after {width: 0;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-852bd1b9-d720-44bf-b470-42e9bfc442bb div.sk-container {display: inline-block;position: relative;}</style><div id="sk-852bd1b9-d720-44bf-b470-42e9bfc442bb" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e939d360-3d80-4f11-af8a-2b6f4b49a45e" type="checkbox" ><label class="sk-toggleable__label" for="e939d360-3d80-4f11-af8a-2b6f4b49a45e">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cff7009b-9c41-4d6e-aa65-5f18feeca47a" type="checkbox" ><label class="sk-toggleable__label" for="cff7009b-9c41-4d6e-aa65-5f18feeca47a">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cbcbe2b-6be0-4daa-a660-960a1716eb1d" type="checkbox" ><label class="sk-toggleable__label" for="7cbcbe2b-6be0-4daa-a660-960a1716eb1d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f81ab3a-4e58-43ea-bc25-a360be09c274" type="checkbox" ><label class="sk-toggleable__label" for="2f81ab3a-4e58-43ea-bc25-a360be09c274">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd11fe16-3148-4548-8e6a-0c1cd0782445" type="checkbox" ><label class="sk-toggleable__label" for="bd11fe16-3148-4548-8e6a-0c1cd0782445">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 {color: black;background-color: white;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 pre{padding: 0;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-toggleable {background-color: white;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-item {z-index: 1;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-84c04926-014e-4719-8d1d-ba31bf8ec3d1" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25b5f4dd-9dd8-4609-a88a-9fb05f086c1c" type="checkbox" ><label class="sk-toggleable__label" for="25b5f4dd-9dd8-4609-a88a-9fb05f086c1c">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05922f49-e3cb-49db-ace8-5d914aa69d9f" type="checkbox" ><label class="sk-toggleable__label" for="05922f49-e3cb-49db-ace8-5d914aa69d9f">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e9bc3a0-8654-4f07-a598-c22356c44c53" type="checkbox" ><label class="sk-toggleable__label" for="2e9bc3a0-8654-4f07-a598-c22356c44c53">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0f0be78-c5df-4ef0-b3c4-9bafd1c881aa" type="checkbox" ><label class="sk-toggleable__label" for="b0f0be78-c5df-4ef0-b3c4-9bafd1c881aa">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2da6d9b7-c71d-4c69-a417-f5445776023d" type="checkbox" ><label class="sk-toggleable__label" for="2da6d9b7-c71d-4c69-a417-f5445776023d">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e492a85-2158-42a1-b1ba-fff1b34e3379" type="checkbox" ><label class="sk-toggleable__label" for="0e492a85-2158-42a1-b1ba-fff1b34e3379">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-54860ca4-61c8-4d42-a46c-297767815e17 {color: black;background-color: white;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 pre{padding: 0;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-toggleable {background-color: white;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-estimator:hover {background-color: #d4ebff;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-item {z-index: 1;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-parallel-item:only-child::after {width: 0;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-54860ca4-61c8-4d42-a46c-297767815e17 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-54860ca4-61c8-4d42-a46c-297767815e17" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b912d42d-478e-4812-a9ac-33bc53ab79a1" type="checkbox" ><label class="sk-toggleable__label" for="b912d42d-478e-4812-a9ac-33bc53ab79a1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f35ea8a-71b3-4037-80b9-a67d279ae93a" type="checkbox" ><label class="sk-toggleable__label" for="5f35ea8a-71b3-4037-80b9-a67d279ae93a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8afb548-90b0-4010-b06d-764daf47644c" type="checkbox" ><label class="sk-toggleable__label" for="a8afb548-90b0-4010-b06d-764daf47644c">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e06755e6-42e1-4172-a0de-26a9b5f82c51" type="checkbox" ><label class="sk-toggleable__label" for="e06755e6-42e1-4172-a0de-26a9b5f82c51">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9108d8a5-60ae-4c72-9593-706a63e6b207" type="checkbox" ><label class="sk-toggleable__label" for="9108d8a5-60ae-4c72-9593-706a63e6b207">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5980984-c58c-4500-8f36-77f2b8402ee6" type="checkbox" ><label class="sk-toggleable__label" for="b5980984-c58c-4500-8f36-77f2b8402ee6">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c357917f-8a4d-402d-b52e-63aef138e0d9" type="checkbox" ><label class="sk-toggleable__label" for="c357917f-8a4d-402d-b52e-63aef138e0d9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6bb001d-6642-4195-bb89-bf4c80fa97e5" type="checkbox" ><label class="sk-toggleable__label" for="c6bb001d-6642-4195-bb89-bf4c80fa97e5">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 {color: black;background-color: white;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 pre{padding: 0;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-toggleable {background-color: white;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-item {z-index: 1;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-parallel-item:only-child::after {width: 0;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-3fb75f5b-62df-4131-b925-75f5e11c3bc1" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="198c333f-b702-456b-b6a6-106b89f4b670" type="checkbox" ><label class="sk-toggleable__label" for="198c333f-b702-456b-b6a6-106b89f4b670">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5964b0d-6106-411a-b57f-0574f0e14ae4" type="checkbox" ><label class="sk-toggleable__label" for="f5964b0d-6106-411a-b57f-0574f0e14ae4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3337631f-b315-4301-a2f4-bab99832526d" type="checkbox" ><label class="sk-toggleable__label" for="3337631f-b315-4301-a2f4-bab99832526d">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc8c6cbc-1845-4b27-9a03-c294d0b21861" type="checkbox" ><label class="sk-toggleable__label" for="bc8c6cbc-1845-4b27-9a03-c294d0b21861">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="469b7772-1434-4034-af6a-17ca8358db7f" type="checkbox" ><label class="sk-toggleable__label" for="469b7772-1434-4034-af6a-17ca8358db7f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="151e2e60-ed77-46a1-b267-5bda1dc89127" type="checkbox" ><label class="sk-toggleable__label" for="151e2e60-ed77-46a1-b267-5bda1dc89127">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9fcd6e8-e671-4937-acfb-0c04e43f5139" type="checkbox" ><label class="sk-toggleable__label" for="e9fcd6e8-e671-4937-acfb-0c04e43f5139">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 {color: black;background-color: white;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 pre{padding: 0;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-toggleable {background-color: white;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-item {z-index: 1;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-parallel-item:only-child::after {width: 0;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-6cc2078e-9f33-4f3f-9cc2-4c98fe527a94" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78aec29a-6d7b-40d9-8753-a0693f707e5f" type="checkbox" ><label class="sk-toggleable__label" for="78aec29a-6d7b-40d9-8753-a0693f707e5f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ab6255c-74e3-4321-ab28-c10ee38ad69c" type="checkbox" ><label class="sk-toggleable__label" for="7ab6255c-74e3-4321-ab28-c10ee38ad69c">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1424e8f-56fd-4b74-9659-2d96eca51262" type="checkbox" ><label class="sk-toggleable__label" for="a1424e8f-56fd-4b74-9659-2d96eca51262">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02f3b573-781c-483f-84e1-39143bfccb44" type="checkbox" ><label class="sk-toggleable__label" for="02f3b573-781c-483f-84e1-39143bfccb44">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="864afe2f-f627-4eaa-8d39-80909da83398" type="checkbox" ><label class="sk-toggleable__label" for="864afe2f-f627-4eaa-8d39-80909da83398">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e30452fd-4145-448b-9985-92e6a73f92b4" type="checkbox" ><label class="sk-toggleable__label" for="e30452fd-4145-448b-9985-92e6a73f92b4">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d1ed2c6-6b89-4276-a29b-4a97046054d1" type="checkbox" ><label class="sk-toggleable__label" for="0d1ed2c6-6b89-4276-a29b-4a97046054d1">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce264104-04ef-4667-bff7-ba81f223c828 {color: black;background-color: white;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 pre{padding: 0;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-toggleable {background-color: white;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-item {z-index: 1;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-parallel-item:only-child::after {width: 0;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce264104-04ef-4667-bff7-ba81f223c828 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ce264104-04ef-4667-bff7-ba81f223c828" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fa74239-d58b-49e7-918d-e08e5ac12878" type="checkbox" ><label class="sk-toggleable__label" for="9fa74239-d58b-49e7-918d-e08e5ac12878">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dca3e686-e38f-4a03-8600-196aa93e5ec5" type="checkbox" ><label class="sk-toggleable__label" for="dca3e686-e38f-4a03-8600-196aa93e5ec5">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10ca481e-7fe1-4136-abf5-405a602b9562" type="checkbox" ><label class="sk-toggleable__label" for="10ca481e-7fe1-4136-abf5-405a602b9562">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84f4d57c-789e-4755-a636-73b4e8aaa0a4" type="checkbox" ><label class="sk-toggleable__label" for="84f4d57c-789e-4755-a636-73b4e8aaa0a4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6939828c-e174-420c-b4ab-dad1a8d84d8b" type="checkbox" ><label class="sk-toggleable__label" for="6939828c-e174-420c-b4ab-dad1a8d84d8b">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5248f1d-dbbd-4766-b381-ef7803a146bf" type="checkbox" ><label class="sk-toggleable__label" for="a5248f1d-dbbd-4766-b381-ef7803a146bf">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eac61c29-9626-4f8f-a890-607f8470dfa4" type="checkbox" ><label class="sk-toggleable__label" for="eac61c29-9626-4f8f-a890-607f8470dfa4">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="115502d4-56ac-4fa0-bafb-eb9053f00cde" type="checkbox" ><label class="sk-toggleable__label" for="115502d4-56ac-4fa0-bafb-eb9053f00cde">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="687361a0-e985-46fe-9323-c4e06ea89fcb" type="checkbox" ><label class="sk-toggleable__label" for="687361a0-e985-46fe-9323-c4e06ea89fcb">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d13350d-479a-4ead-91ad-ca5eff252098" type="checkbox" ><label class="sk-toggleable__label" for="5d13350d-479a-4ead-91ad-ca5eff252098">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8277a9f-b65a-450e-9a50-787a42ffc1a2" type="checkbox" ><label class="sk-toggleable__label" for="a8277a9f-b65a-450e-9a50-787a42ffc1a2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec39ed95-72be-4a47-9b3e-97c55b07e8e7" type="checkbox" ><label class="sk-toggleable__label" for="ec39ed95-72be-4a47-9b3e-97c55b07e8e7">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfe1ced9-8b85-494e-9924-822f714cfedd" type="checkbox" ><label class="sk-toggleable__label" for="bfe1ced9-8b85-494e-9924-822f714cfedd">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bca369a-04bb-411a-b8d6-9bd490bd382a" type="checkbox" ><label class="sk-toggleable__label" for="2bca369a-04bb-411a-b8d6-9bd490bd382a">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ba4203e-536a-42bd-b132-a3adb8be8d12" type="checkbox" ><label class="sk-toggleable__label" for="9ba4203e-536a-42bd-b132-a3adb8be8d12">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4229f4c-5289-4361-9371-f1cfd671d453" type="checkbox" ><label class="sk-toggleable__label" for="e4229f4c-5289-4361-9371-f1cfd671d453">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd5850></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ae039b1-70dd-4ee8-90fc-b67e05f9592e" type="checkbox" ><label class="sk-toggleable__label" for="7ae039b1-70dd-4ee8-90fc-b67e05f9592e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c170d72-0f13-4a40-8b8b-e1ec7769e6b0" type="checkbox" ><label class="sk-toggleable__label" for="9c170d72-0f13-4a40-8b8b-e1ec7769e6b0">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe92cdd52b0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40276bd5-a8dd-4897-9f01-efcb5cb05e4f" type="checkbox" ><label class="sk-toggleable__label" for="40276bd5-a8dd-4897-9f01-efcb5cb05e4f">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26305570-2217-48f7-9dcf-2bce9f4bb431" type="checkbox" ><label class="sk-toggleable__label" for="26305570-2217-48f7-9dcf-2bce9f4bb431">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1308f094-3e5f-490f-b715-5acbff824cf1" type="checkbox" ><label class="sk-toggleable__label" for="1308f094-3e5f-490f-b715-5acbff824cf1">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 0.90 seconds, Lasso  Evaluation in 0.48 seconds, Gradient Boosting  Evaluation in 0.62 seconds, Stacking Regressor  Evaluation in 10.17 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  25.078 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
