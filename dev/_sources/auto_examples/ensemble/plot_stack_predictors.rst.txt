
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 {color: black;background-color: white;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 pre{padding: 0;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-toggleable {background-color: white;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-item {z-index: 1;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-parallel-item:only-child::after {width: 0;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-a3dd25ae-e1c6-41b1-a3bd-40fb0b642957" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f772c3fa-a6c3-4f8c-8469-447f7c34d74e" type="checkbox" ><label class="sk-toggleable__label" for="f772c3fa-a6c3-4f8c-8469-447f7c34d74e">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d137b32-ae92-4bac-b1ba-3cb98a7e0fda" type="checkbox" ><label class="sk-toggleable__label" for="6d137b32-ae92-4bac-b1ba-3cb98a7e0fda">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af987d27-c7e1-4e7a-8c59-f925748b0c65" type="checkbox" ><label class="sk-toggleable__label" for="af987d27-c7e1-4e7a-8c59-f925748b0c65">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82024ead-9b3f-494b-b8ae-db8f32ac8327" type="checkbox" ><label class="sk-toggleable__label" for="82024ead-9b3f-494b-b8ae-db8f32ac8327">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4d0b4d3-db70-4bdc-827f-c9b21e24286a" type="checkbox" ><label class="sk-toggleable__label" for="b4d0b4d3-db70-4bdc-827f-c9b21e24286a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-021db6d5-7186-4eff-87ac-29cff02e5970 {color: black;background-color: white;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 pre{padding: 0;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-toggleable {background-color: white;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-estimator:hover {background-color: #d4ebff;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-item {z-index: 1;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-parallel-item:only-child::after {width: 0;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-021db6d5-7186-4eff-87ac-29cff02e5970 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-021db6d5-7186-4eff-87ac-29cff02e5970" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e889c941-e4e6-4272-9184-b4616ef1215b" type="checkbox" ><label class="sk-toggleable__label" for="e889c941-e4e6-4272-9184-b4616ef1215b">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1f59381-41c7-4f16-bb52-bd44580812c7" type="checkbox" ><label class="sk-toggleable__label" for="e1f59381-41c7-4f16-bb52-bd44580812c7">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="374b990a-d756-41d8-bc4d-175135d18ba1" type="checkbox" ><label class="sk-toggleable__label" for="374b990a-d756-41d8-bc4d-175135d18ba1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d233d5a-c6ed-4bbc-a266-417a092c1a18" type="checkbox" ><label class="sk-toggleable__label" for="5d233d5a-c6ed-4bbc-a266-417a092c1a18">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88ef0039-7e15-45ec-af4e-e3a0ea2c987c" type="checkbox" ><label class="sk-toggleable__label" for="88ef0039-7e15-45ec-af4e-e3a0ea2c987c">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43492b68-43c7-4713-85bb-913f4d054204" type="checkbox" ><label class="sk-toggleable__label" for="43492b68-43c7-4713-85bb-913f4d054204">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-34072476-effd-466b-bb0d-2b70614b3d10 {color: black;background-color: white;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 pre{padding: 0;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-toggleable {background-color: white;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-item {z-index: 1;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-parallel-item:only-child::after {width: 0;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-34072476-effd-466b-bb0d-2b70614b3d10 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-34072476-effd-466b-bb0d-2b70614b3d10" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfc13b27-df43-478e-b4cd-8e85b7146b32" type="checkbox" ><label class="sk-toggleable__label" for="dfc13b27-df43-478e-b4cd-8e85b7146b32">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8fa4aa6-def8-4439-998b-85f3195f9702" type="checkbox" ><label class="sk-toggleable__label" for="c8fa4aa6-def8-4439-998b-85f3195f9702">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c0024cb-74a2-448b-a2bf-9e07adbd2e26" type="checkbox" ><label class="sk-toggleable__label" for="0c0024cb-74a2-448b-a2bf-9e07adbd2e26">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="092a6368-818e-44fc-a3f7-8cd8f016f3dd" type="checkbox" ><label class="sk-toggleable__label" for="092a6368-818e-44fc-a3f7-8cd8f016f3dd">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="582b3cb4-f97f-4ad4-b2d5-9afaf30fdadb" type="checkbox" ><label class="sk-toggleable__label" for="582b3cb4-f97f-4ad4-b2d5-9afaf30fdadb">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e143f47d-d9d4-43a4-a5bf-de2aa65c8a0b" type="checkbox" ><label class="sk-toggleable__label" for="e143f47d-d9d4-43a4-a5bf-de2aa65c8a0b">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ff56d1c-be55-46df-8afd-f4fbde344919" type="checkbox" ><label class="sk-toggleable__label" for="7ff56d1c-be55-46df-8afd-f4fbde344919">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e91b7075-3437-4f18-92a4-6010289f8729" type="checkbox" ><label class="sk-toggleable__label" for="e91b7075-3437-4f18-92a4-6010289f8729">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-72c07050-a541-4803-9a6a-30b45b73393f {color: black;background-color: white;}#sk-72c07050-a541-4803-9a6a-30b45b73393f pre{padding: 0;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-toggleable {background-color: white;}#sk-72c07050-a541-4803-9a6a-30b45b73393f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-72c07050-a541-4803-9a6a-30b45b73393f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-72c07050-a541-4803-9a6a-30b45b73393f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-estimator:hover {background-color: #d4ebff;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-item {z-index: 1;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-parallel-item:only-child::after {width: 0;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-72c07050-a541-4803-9a6a-30b45b73393f div.sk-container {display: inline-block;position: relative;}</style><div id="sk-72c07050-a541-4803-9a6a-30b45b73393f" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38bcbed5-58cc-4f68-af73-7a36fe3c84b0" type="checkbox" ><label class="sk-toggleable__label" for="38bcbed5-58cc-4f68-af73-7a36fe3c84b0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c67bb55-2a52-41a9-a117-8d23db2436f7" type="checkbox" ><label class="sk-toggleable__label" for="9c67bb55-2a52-41a9-a117-8d23db2436f7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b497626b-ac62-460c-900a-36ba79910cc3" type="checkbox" ><label class="sk-toggleable__label" for="b497626b-ac62-460c-900a-36ba79910cc3">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8658e40-04c8-4b2b-8a1e-a4a63cdd5a15" type="checkbox" ><label class="sk-toggleable__label" for="e8658e40-04c8-4b2b-8a1e-a4a63cdd5a15">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffb2eb9f-8d4c-42b9-955e-debc0847653b" type="checkbox" ><label class="sk-toggleable__label" for="ffb2eb9f-8d4c-42b9-955e-debc0847653b">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8711b25-5a18-4836-a35c-434f10f440a6" type="checkbox" ><label class="sk-toggleable__label" for="d8711b25-5a18-4836-a35c-434f10f440a6">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9cf0d96-6ed5-4059-8da4-6b41569d75e0" type="checkbox" ><label class="sk-toggleable__label" for="b9cf0d96-6ed5-4059-8da4-6b41569d75e0">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff371320-58e8-4f48-98ca-1bcdb856beca {color: black;background-color: white;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca pre{padding: 0;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-toggleable {background-color: white;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-item {z-index: 1;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-parallel-item:only-child::after {width: 0;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff371320-58e8-4f48-98ca-1bcdb856beca div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ff371320-58e8-4f48-98ca-1bcdb856beca" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e58e7b05-8a60-46da-8ccd-c454cc37e3e8" type="checkbox" ><label class="sk-toggleable__label" for="e58e7b05-8a60-46da-8ccd-c454cc37e3e8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71f6d6c8-9875-4a68-8e80-19cf98dabdf1" type="checkbox" ><label class="sk-toggleable__label" for="71f6d6c8-9875-4a68-8e80-19cf98dabdf1">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df2ff7ab-dd2e-4977-a66e-c4273f413a68" type="checkbox" ><label class="sk-toggleable__label" for="df2ff7ab-dd2e-4977-a66e-c4273f413a68">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="279414ec-cbba-4f27-aef8-f4c0f637e299" type="checkbox" ><label class="sk-toggleable__label" for="279414ec-cbba-4f27-aef8-f4c0f637e299">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbaf4fc2-8a83-4185-9a4e-02469de7fc66" type="checkbox" ><label class="sk-toggleable__label" for="cbaf4fc2-8a83-4185-9a4e-02469de7fc66">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c158b7d3-6ffc-4040-8c58-39c72569e662" type="checkbox" ><label class="sk-toggleable__label" for="c158b7d3-6ffc-4040-8c58-39c72569e662">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0064fa6-8a2e-4034-b4d8-9429150adf41" type="checkbox" ><label class="sk-toggleable__label" for="e0064fa6-8a2e-4034-b4d8-9429150adf41">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b1295a71-48f0-42fb-94de-17c273301d22 {color: black;background-color: white;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 pre{padding: 0;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-toggleable {background-color: white;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-item {z-index: 1;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-parallel-item:only-child::after {width: 0;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b1295a71-48f0-42fb-94de-17c273301d22 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-b1295a71-48f0-42fb-94de-17c273301d22" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f01b3dda-d288-4c23-94ba-f7b92ca39fe4" type="checkbox" ><label class="sk-toggleable__label" for="f01b3dda-d288-4c23-94ba-f7b92ca39fe4">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a415b118-ec36-4113-a675-49532cac8c42" type="checkbox" ><label class="sk-toggleable__label" for="a415b118-ec36-4113-a675-49532cac8c42">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bce37202-a8b3-4706-b4c8-2d46121ff7a2" type="checkbox" ><label class="sk-toggleable__label" for="bce37202-a8b3-4706-b4c8-2d46121ff7a2">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9a087d3-762b-4beb-9fd0-c35f92989dc1" type="checkbox" ><label class="sk-toggleable__label" for="c9a087d3-762b-4beb-9fd0-c35f92989dc1">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d14ac44-891c-4e67-9646-d9a34b4055a2" type="checkbox" ><label class="sk-toggleable__label" for="4d14ac44-891c-4e67-9646-d9a34b4055a2">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d12bad8-b56a-4994-a1d0-6e842a2f5a71" type="checkbox" ><label class="sk-toggleable__label" for="8d12bad8-b56a-4994-a1d0-6e842a2f5a71">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c46cf771-6b45-4801-94d5-3d1faeb183b1" type="checkbox" ><label class="sk-toggleable__label" for="c46cf771-6b45-4801-94d5-3d1faeb183b1">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de12bb51-74cb-4f14-9412-33c1583ace35" type="checkbox" ><label class="sk-toggleable__label" for="de12bb51-74cb-4f14-9412-33c1583ace35">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33e5f812-4b26-4471-afbc-fdd97334e245" type="checkbox" ><label class="sk-toggleable__label" for="33e5f812-4b26-4471-afbc-fdd97334e245">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6dc51fa-b960-4418-9ac8-159e4be0722b" type="checkbox" ><label class="sk-toggleable__label" for="b6dc51fa-b960-4418-9ac8-159e4be0722b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e673ca1-608c-48fe-ae58-ea52c81af866" type="checkbox" ><label class="sk-toggleable__label" for="5e673ca1-608c-48fe-ae58-ea52c81af866">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fac78a16-8240-4bfd-8396-bcbc3c96289d" type="checkbox" ><label class="sk-toggleable__label" for="fac78a16-8240-4bfd-8396-bcbc3c96289d">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc9e5157-8d01-4e3f-bf87-0f17ec32e53c" type="checkbox" ><label class="sk-toggleable__label" for="dc9e5157-8d01-4e3f-bf87-0f17ec32e53c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be475b72-c5f4-4010-a494-4c532e27734c" type="checkbox" ><label class="sk-toggleable__label" for="be475b72-c5f4-4010-a494-4c532e27734c">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8ba4027-120c-4808-9149-109a8010534f" type="checkbox" ><label class="sk-toggleable__label" for="d8ba4027-120c-4808-9149-109a8010534f">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5005a811-f275-4188-b718-b4d778277b50" type="checkbox" ><label class="sk-toggleable__label" for="5005a811-f275-4188-b718-b4d778277b50">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d6ee0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1952da6-3adf-4693-8e17-337bcb57470f" type="checkbox" ><label class="sk-toggleable__label" for="c1952da6-3adf-4693-8e17-337bcb57470f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e968c11e-f661-459a-9312-91b5cb51e04f" type="checkbox" ><label class="sk-toggleable__label" for="e968c11e-f661-459a-9312-91b5cb51e04f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fe8a64d67f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbb888f3-c917-4e38-883a-c46f6d164794" type="checkbox" ><label class="sk-toggleable__label" for="dbb888f3-c917-4e38-883a-c46f6d164794">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="068576ff-8050-4171-88f3-517e2fba4c53" type="checkbox" ><label class="sk-toggleable__label" for="068576ff-8050-4171-88f3-517e2fba4c53">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4e0b900-12e8-481c-aee8-9747ce5ee9ad" type="checkbox" ><label class="sk-toggleable__label" for="c4e0b900-12e8-481c-aee8-9747ce5ee9ad">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.21 seconds, Lasso  Evaluation in 0.73 seconds, Gradient Boosting  Evaluation in 0.77 seconds, Stacking Regressor  Evaluation in 14.83 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  36.844 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
