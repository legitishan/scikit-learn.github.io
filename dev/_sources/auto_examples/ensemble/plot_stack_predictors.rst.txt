
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-75bf6389-d683-4079-b91b-de45252a980d {color: black;background-color: white;}#sk-75bf6389-d683-4079-b91b-de45252a980d pre{padding: 0;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-toggleable {background-color: white;}#sk-75bf6389-d683-4079-b91b-de45252a980d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-75bf6389-d683-4079-b91b-de45252a980d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75bf6389-d683-4079-b91b-de45252a980d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-estimator:hover {background-color: #d4ebff;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-item {z-index: 1;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-parallel-item:only-child::after {width: 0;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-75bf6389-d683-4079-b91b-de45252a980d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-75bf6389-d683-4079-b91b-de45252a980d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5e4ddd1-277f-4e4a-beee-2ff92a8a2d72" type="checkbox" ><label class="sk-toggleable__label" for="a5e4ddd1-277f-4e4a-beee-2ff92a8a2d72">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="901e3baa-ffe4-4440-956b-a067b7d34197" type="checkbox" ><label class="sk-toggleable__label" for="901e3baa-ffe4-4440-956b-a067b7d34197">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e2950aa-3601-4576-9268-f55b4f1acc1a" type="checkbox" ><label class="sk-toggleable__label" for="9e2950aa-3601-4576-9268-f55b4f1acc1a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de48b2f7-c0d3-42aa-9396-e26dcf2ce311" type="checkbox" ><label class="sk-toggleable__label" for="de48b2f7-c0d3-42aa-9396-e26dcf2ce311">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb40a5c6-2d18-4515-ab85-116ed9dde5fa" type="checkbox" ><label class="sk-toggleable__label" for="fb40a5c6-2d18-4515-ab85-116ed9dde5fa">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a {color: black;background-color: white;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a pre{padding: 0;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-toggleable {background-color: white;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-estimator:hover {background-color: #d4ebff;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-item {z-index: 1;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-parallel-item:only-child::after {width: 0;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eac8466d-97f3-44a7-a475-c510c0dfce7a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-eac8466d-97f3-44a7-a475-c510c0dfce7a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28a4610e-bd05-4894-851e-50b81ddf5b5f" type="checkbox" ><label class="sk-toggleable__label" for="28a4610e-bd05-4894-851e-50b81ddf5b5f">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e62fc162-1789-416c-b0da-ed7833e717e2" type="checkbox" ><label class="sk-toggleable__label" for="e62fc162-1789-416c-b0da-ed7833e717e2">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f61bed64-c2d8-4ed9-9b36-e3855604ad70" type="checkbox" ><label class="sk-toggleable__label" for="f61bed64-c2d8-4ed9-9b36-e3855604ad70">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e2c7dba-1361-4d31-bd2f-dcd51688144b" type="checkbox" ><label class="sk-toggleable__label" for="1e2c7dba-1361-4d31-bd2f-dcd51688144b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6047048e-d23d-4e63-9bed-57dc83c2030b" type="checkbox" ><label class="sk-toggleable__label" for="6047048e-d23d-4e63-9bed-57dc83c2030b">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a8c9c03-3f60-4eee-8377-36ea9e5afb4a" type="checkbox" ><label class="sk-toggleable__label" for="5a8c9c03-3f60-4eee-8377-36ea9e5afb4a">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14027a9e-826b-4ed6-98c8-278a65ae763a {color: black;background-color: white;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a pre{padding: 0;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-toggleable {background-color: white;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-estimator:hover {background-color: #d4ebff;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-item {z-index: 1;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-parallel-item:only-child::after {width: 0;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14027a9e-826b-4ed6-98c8-278a65ae763a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-14027a9e-826b-4ed6-98c8-278a65ae763a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ea3f3b3-ce56-4d61-b5b4-67f65533face" type="checkbox" ><label class="sk-toggleable__label" for="6ea3f3b3-ce56-4d61-b5b4-67f65533face">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91192974-5e77-45a9-a81a-f41443543e74" type="checkbox" ><label class="sk-toggleable__label" for="91192974-5e77-45a9-a81a-f41443543e74">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9812e47a-b308-4d8d-947b-4244d23903af" type="checkbox" ><label class="sk-toggleable__label" for="9812e47a-b308-4d8d-947b-4244d23903af">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84ee355f-e899-4768-aa7e-b17936a206f1" type="checkbox" ><label class="sk-toggleable__label" for="84ee355f-e899-4768-aa7e-b17936a206f1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8197526-0f8b-4733-b84d-1b56d7d8693b" type="checkbox" ><label class="sk-toggleable__label" for="d8197526-0f8b-4733-b84d-1b56d7d8693b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b83b02ff-b78e-4c1f-99d4-a8319d7363b5" type="checkbox" ><label class="sk-toggleable__label" for="b83b02ff-b78e-4c1f-99d4-a8319d7363b5">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95c22ca0-90fe-4938-b04d-e6d6197fb50c" type="checkbox" ><label class="sk-toggleable__label" for="95c22ca0-90fe-4938-b04d-e6d6197fb50c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a37e934-6c0f-4da5-aa35-5b405244d401" type="checkbox" ><label class="sk-toggleable__label" for="0a37e934-6c0f-4da5-aa35-5b405244d401">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-70248204-a715-4614-b2f6-d695b1aea85f {color: black;background-color: white;}#sk-70248204-a715-4614-b2f6-d695b1aea85f pre{padding: 0;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-toggleable {background-color: white;}#sk-70248204-a715-4614-b2f6-d695b1aea85f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-70248204-a715-4614-b2f6-d695b1aea85f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-70248204-a715-4614-b2f6-d695b1aea85f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-estimator:hover {background-color: #d4ebff;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-item {z-index: 1;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-parallel-item:only-child::after {width: 0;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-70248204-a715-4614-b2f6-d695b1aea85f div.sk-container {display: inline-block;position: relative;}</style><div id="sk-70248204-a715-4614-b2f6-d695b1aea85f" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cf148c6-5f88-4d5e-93f1-14e84f627564" type="checkbox" ><label class="sk-toggleable__label" for="7cf148c6-5f88-4d5e-93f1-14e84f627564">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f2457e0-b283-44df-aea2-4417989a4520" type="checkbox" ><label class="sk-toggleable__label" for="6f2457e0-b283-44df-aea2-4417989a4520">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cecda6d4-c65b-4f04-836c-a645cab176cc" type="checkbox" ><label class="sk-toggleable__label" for="cecda6d4-c65b-4f04-836c-a645cab176cc">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f72dcf97-7468-4bee-ad2b-fea1eb85a628" type="checkbox" ><label class="sk-toggleable__label" for="f72dcf97-7468-4bee-ad2b-fea1eb85a628">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6fda433-3bb6-4229-b051-d1ae7da0a4a5" type="checkbox" ><label class="sk-toggleable__label" for="b6fda433-3bb6-4229-b051-d1ae7da0a4a5">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a86b6433-36ac-4d12-9b8f-53857f0320a5" type="checkbox" ><label class="sk-toggleable__label" for="a86b6433-36ac-4d12-9b8f-53857f0320a5">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c068213d-bbde-4cf2-acc2-f3db569489f9" type="checkbox" ><label class="sk-toggleable__label" for="c068213d-bbde-4cf2-acc2-f3db569489f9">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e {color: black;background-color: white;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e pre{padding: 0;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-toggleable {background-color: white;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-estimator:hover {background-color: #d4ebff;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-item {z-index: 1;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-parallel-item:only-child::after {width: 0;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e div.sk-container {display: inline-block;position: relative;}</style><div id="sk-1812e5b2-a277-4eeb-956e-e085b1dfd27e" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1104813d-2573-4121-a49c-ff5cba34c44f" type="checkbox" ><label class="sk-toggleable__label" for="1104813d-2573-4121-a49c-ff5cba34c44f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad5c9592-3a26-4c1e-a027-0d50c6287349" type="checkbox" ><label class="sk-toggleable__label" for="ad5c9592-3a26-4c1e-a027-0d50c6287349">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85f211e5-190c-42ad-a645-79ca48e2ea38" type="checkbox" ><label class="sk-toggleable__label" for="85f211e5-190c-42ad-a645-79ca48e2ea38">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c77e25a2-2753-423e-b8b4-dbd4957b0c58" type="checkbox" ><label class="sk-toggleable__label" for="c77e25a2-2753-423e-b8b4-dbd4957b0c58">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e24cfb1-db22-478c-ad4b-17e85b17ad54" type="checkbox" ><label class="sk-toggleable__label" for="3e24cfb1-db22-478c-ad4b-17e85b17ad54">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64d74529-86bb-4c5a-9f9c-c1e4251b1896" type="checkbox" ><label class="sk-toggleable__label" for="64d74529-86bb-4c5a-9f9c-c1e4251b1896">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="726d6b74-5ea2-45bb-ba97-910e215d8927" type="checkbox" ><label class="sk-toggleable__label" for="726d6b74-5ea2-45bb-ba97-910e215d8927">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 {color: black;background-color: white;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 pre{padding: 0;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-toggleable {background-color: white;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-item {z-index: 1;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ac123b8c-63c3-42dd-bd1e-e5dc35c419d3" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60e55447-7532-45e9-aaed-412f9f8e83ce" type="checkbox" ><label class="sk-toggleable__label" for="60e55447-7532-45e9-aaed-412f9f8e83ce">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebb9bdb5-2bef-4517-8cbe-37f4071c8ac3" type="checkbox" ><label class="sk-toggleable__label" for="ebb9bdb5-2bef-4517-8cbe-37f4071c8ac3">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="485f53c5-98d5-4464-842f-67e46e5ac013" type="checkbox" ><label class="sk-toggleable__label" for="485f53c5-98d5-4464-842f-67e46e5ac013">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d726204-7160-4210-a421-713b33f49915" type="checkbox" ><label class="sk-toggleable__label" for="1d726204-7160-4210-a421-713b33f49915">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bd31011-a1d9-4b36-be37-c69d720ae231" type="checkbox" ><label class="sk-toggleable__label" for="5bd31011-a1d9-4b36-be37-c69d720ae231">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1060e817-e210-4863-beb9-5031e4501b2a" type="checkbox" ><label class="sk-toggleable__label" for="1060e817-e210-4863-beb9-5031e4501b2a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc6ddc91-962b-4055-9aa4-188e03bb423d" type="checkbox" ><label class="sk-toggleable__label" for="bc6ddc91-962b-4055-9aa4-188e03bb423d">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51c9d849-635a-4111-a204-d3e9e87e7d01" type="checkbox" ><label class="sk-toggleable__label" for="51c9d849-635a-4111-a204-d3e9e87e7d01">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f9c167a-dce0-46db-ae5c-012667a1fc95" type="checkbox" ><label class="sk-toggleable__label" for="8f9c167a-dce0-46db-ae5c-012667a1fc95">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fccefb8-b50a-4d61-b504-e662e82f6c7f" type="checkbox" ><label class="sk-toggleable__label" for="3fccefb8-b50a-4d61-b504-e662e82f6c7f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0edd5dd8-a5a8-4692-9ebd-633a23907dc0" type="checkbox" ><label class="sk-toggleable__label" for="0edd5dd8-a5a8-4692-9ebd-633a23907dc0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2809d682-c8b0-4130-8161-dffb1ac7cac1" type="checkbox" ><label class="sk-toggleable__label" for="2809d682-c8b0-4130-8161-dffb1ac7cac1">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf7b9029-53cd-4a67-864d-b48a120249ed" type="checkbox" ><label class="sk-toggleable__label" for="cf7b9029-53cd-4a67-864d-b48a120249ed">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58e549d4-9507-429f-8994-6d04f0b53cbf" type="checkbox" ><label class="sk-toggleable__label" for="58e549d4-9507-429f-8994-6d04f0b53cbf">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="819e110b-2376-4c67-a318-89b630e80019" type="checkbox" ><label class="sk-toggleable__label" for="819e110b-2376-4c67-a318-89b630e80019">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d90fc5bc-7c1b-427a-b96a-47e211b83999" type="checkbox" ><label class="sk-toggleable__label" for="d90fc5bc-7c1b-427a-b96a-47e211b83999">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d4c0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da90f52d-972a-4a08-9058-eb53653a00bd" type="checkbox" ><label class="sk-toggleable__label" for="da90f52d-972a-4a08-9058-eb53653a00bd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bd897f8-fb43-4daa-946c-1091074508f9" type="checkbox" ><label class="sk-toggleable__label" for="5bd897f8-fb43-4daa-946c-1091074508f9">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f303683d760></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8d3f764-cfda-420e-8929-27a88d2c0aac" type="checkbox" ><label class="sk-toggleable__label" for="b8d3f764-cfda-420e-8929-27a88d2c0aac">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2b96aef-faa6-4569-a12f-2c7e576cdfe1" type="checkbox" ><label class="sk-toggleable__label" for="a2b96aef-faa6-4569-a12f-2c7e576cdfe1">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0ab9f05-63b7-4b9b-92e3-d86f2945382f" type="checkbox" ><label class="sk-toggleable__label" for="c0ab9f05-63b7-4b9b-92e3-d86f2945382f">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 0.83 seconds, Lasso  Evaluation in 0.39 seconds, Gradient Boosting  Evaluation in 0.61 seconds, Stacking Regressor  Evaluation in 9.78 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  23.571 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
