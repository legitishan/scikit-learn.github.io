
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff {color: black;background-color: white;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff pre{padding: 0;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-toggleable {background-color: white;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-item {z-index: 1;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-parallel-item:only-child::after {width: 0;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6344ca1e-1fae-40b1-b22a-2fda379804ff div.sk-container {display: inline-block;position: relative;}</style><div id="sk-6344ca1e-1fae-40b1-b22a-2fda379804ff" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d5db2b5-a17d-40ab-802c-425f50eeabc9" type="checkbox" ><label class="sk-toggleable__label" for="8d5db2b5-a17d-40ab-802c-425f50eeabc9">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17b04f8b-0b7b-4752-b840-65c87f1e7a44" type="checkbox" ><label class="sk-toggleable__label" for="17b04f8b-0b7b-4752-b840-65c87f1e7a44">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcaef22d-d50d-4d47-adbe-73cd91401e6b" type="checkbox" ><label class="sk-toggleable__label" for="dcaef22d-d50d-4d47-adbe-73cd91401e6b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53f04642-63ba-4905-9259-02003ce34957" type="checkbox" ><label class="sk-toggleable__label" for="53f04642-63ba-4905-9259-02003ce34957">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="986f5439-839f-4d25-b7bf-bec6e42c5c99" type="checkbox" ><label class="sk-toggleable__label" for="986f5439-839f-4d25-b7bf-bec6e42c5c99">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d {color: black;background-color: white;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d pre{padding: 0;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-toggleable {background-color: white;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-estimator:hover {background-color: #d4ebff;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-item {z-index: 1;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-parallel-item:only-child::after {width: 0;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-8631deb1-a8b2-4f1d-bf41-ade75c9b9f6d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19bad7d7-4d3a-4719-b9df-8639dfd163b1" type="checkbox" ><label class="sk-toggleable__label" for="19bad7d7-4d3a-4719-b9df-8639dfd163b1">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="338e8ba8-6ec3-4a74-a71a-0565027a905f" type="checkbox" ><label class="sk-toggleable__label" for="338e8ba8-6ec3-4a74-a71a-0565027a905f">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbae00fa-6683-4626-ab8d-3d037e3482db" type="checkbox" ><label class="sk-toggleable__label" for="fbae00fa-6683-4626-ab8d-3d037e3482db">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1d6310f-7f06-458a-a8b4-5c5d939b6338" type="checkbox" ><label class="sk-toggleable__label" for="d1d6310f-7f06-458a-a8b4-5c5d939b6338">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a2e3387-39d1-4e41-a321-79b401fb2964" type="checkbox" ><label class="sk-toggleable__label" for="3a2e3387-39d1-4e41-a321-79b401fb2964">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4afe365e-6809-4bd1-b620-82049a71927e" type="checkbox" ><label class="sk-toggleable__label" for="4afe365e-6809-4bd1-b620-82049a71927e">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 {color: black;background-color: white;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 pre{padding: 0;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-toggleable {background-color: white;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-item {z-index: 1;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-parallel-item:only-child::after {width: 0;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-0290fdc3-af2e-4c34-b260-7b6ca7ebec66" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b90c886f-793e-4244-8992-3af83b3d6836" type="checkbox" ><label class="sk-toggleable__label" for="b90c886f-793e-4244-8992-3af83b3d6836">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81547b15-90ae-4aa7-8e81-46631dd9ba92" type="checkbox" ><label class="sk-toggleable__label" for="81547b15-90ae-4aa7-8e81-46631dd9ba92">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5870e0f2-0abb-4d2a-bd6c-edc0e8963a69" type="checkbox" ><label class="sk-toggleable__label" for="5870e0f2-0abb-4d2a-bd6c-edc0e8963a69">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5e5d07c-3dc7-4cf6-a50c-15fac2b5d44a" type="checkbox" ><label class="sk-toggleable__label" for="b5e5d07c-3dc7-4cf6-a50c-15fac2b5d44a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e52bfcd-354e-4b8a-8551-685bd9176510" type="checkbox" ><label class="sk-toggleable__label" for="9e52bfcd-354e-4b8a-8551-685bd9176510">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41f54be5-b58c-4296-bd2d-33612ac14b16" type="checkbox" ><label class="sk-toggleable__label" for="41f54be5-b58c-4296-bd2d-33612ac14b16">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35161c6e-64a2-4894-944d-7a25af0faf5c" type="checkbox" ><label class="sk-toggleable__label" for="35161c6e-64a2-4894-944d-7a25af0faf5c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90b91644-d651-49fe-8075-b375948ef74a" type="checkbox" ><label class="sk-toggleable__label" for="90b91644-d651-49fe-8075-b375948ef74a">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b9b589c-ae72-4352-b584-d215602401df {color: black;background-color: white;}#sk-1b9b589c-ae72-4352-b584-d215602401df pre{padding: 0;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-toggleable {background-color: white;}#sk-1b9b589c-ae72-4352-b584-d215602401df label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b9b589c-ae72-4352-b584-d215602401df input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b9b589c-ae72-4352-b584-d215602401df input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-item {z-index: 1;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-parallel-item:only-child::after {width: 0;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b9b589c-ae72-4352-b584-d215602401df div.sk-container {display: inline-block;position: relative;}</style><div id="sk-1b9b589c-ae72-4352-b584-d215602401df" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e2f660c-7991-406f-beaf-db3c87d5ffdb" type="checkbox" ><label class="sk-toggleable__label" for="9e2f660c-7991-406f-beaf-db3c87d5ffdb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcd1c969-542d-4d76-84e2-95ee359bb19f" type="checkbox" ><label class="sk-toggleable__label" for="fcd1c969-542d-4d76-84e2-95ee359bb19f">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b847a8ba-712e-495e-8ca7-86f2a1cd0c80" type="checkbox" ><label class="sk-toggleable__label" for="b847a8ba-712e-495e-8ca7-86f2a1cd0c80">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="140ec962-e594-4c70-ab82-c58146fcf6b3" type="checkbox" ><label class="sk-toggleable__label" for="140ec962-e594-4c70-ab82-c58146fcf6b3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de42e28d-c402-463b-8f1c-58fc480771ba" type="checkbox" ><label class="sk-toggleable__label" for="de42e28d-c402-463b-8f1c-58fc480771ba">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2f692d3-6d0f-449a-8ade-b6912c91e40e" type="checkbox" ><label class="sk-toggleable__label" for="a2f692d3-6d0f-449a-8ade-b6912c91e40e">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74736f27-53cc-4964-9aba-731f57123a2d" type="checkbox" ><label class="sk-toggleable__label" for="74736f27-53cc-4964-9aba-731f57123a2d">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c {color: black;background-color: white;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c pre{padding: 0;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-toggleable {background-color: white;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-item {z-index: 1;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-parallel-item:only-child::after {width: 0;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa898ac8-0636-4f4b-9f8b-499628c6458c div.sk-container {display: inline-block;position: relative;}</style><div id="sk-fa898ac8-0636-4f4b-9f8b-499628c6458c" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87484d00-4ba9-4b03-8287-61a5dc659f02" type="checkbox" ><label class="sk-toggleable__label" for="87484d00-4ba9-4b03-8287-61a5dc659f02">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="176fbd0f-a978-4b7a-9403-7638644cc018" type="checkbox" ><label class="sk-toggleable__label" for="176fbd0f-a978-4b7a-9403-7638644cc018">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16689c79-e539-4aa1-8330-eb53842633ec" type="checkbox" ><label class="sk-toggleable__label" for="16689c79-e539-4aa1-8330-eb53842633ec">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce8adcd5-f8d7-456d-aa21-47be660b155d" type="checkbox" ><label class="sk-toggleable__label" for="ce8adcd5-f8d7-456d-aa21-47be660b155d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="849034c7-876d-46ed-9de4-af78e43ff57d" type="checkbox" ><label class="sk-toggleable__label" for="849034c7-876d-46ed-9de4-af78e43ff57d">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2349d22-46da-4167-9593-e9dd3cb58b78" type="checkbox" ><label class="sk-toggleable__label" for="c2349d22-46da-4167-9593-e9dd3cb58b78">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b42a18d-b8c3-4a08-846f-7d617f9c43ba" type="checkbox" ><label class="sk-toggleable__label" for="0b42a18d-b8c3-4a08-846f-7d617f9c43ba">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 {color: black;background-color: white;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 pre{padding: 0;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-toggleable {background-color: white;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-item {z-index: 1;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-parallel-item:only-child::after {width: 0;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-35a586b0-a59a-4d58-8de8-f50763a45eb9 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-35a586b0-a59a-4d58-8de8-f50763a45eb9" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a54caa3-1b90-47d1-ae97-900647b64ec4" type="checkbox" ><label class="sk-toggleable__label" for="4a54caa3-1b90-47d1-ae97-900647b64ec4">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b19fbcbb-9138-47e3-8d6f-e21b1085f930" type="checkbox" ><label class="sk-toggleable__label" for="b19fbcbb-9138-47e3-8d6f-e21b1085f930">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2f92ceb-a49e-4761-bf17-2d8693549d96" type="checkbox" ><label class="sk-toggleable__label" for="f2f92ceb-a49e-4761-bf17-2d8693549d96">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cde73b6c-810e-4199-a959-dbb34e7c4a18" type="checkbox" ><label class="sk-toggleable__label" for="cde73b6c-810e-4199-a959-dbb34e7c4a18">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73bea6a3-23c9-4e41-a8d6-f84c78d8b23f" type="checkbox" ><label class="sk-toggleable__label" for="73bea6a3-23c9-4e41-a8d6-f84c78d8b23f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1aaeb06-a92a-4237-92f5-f6100bc8fe7e" type="checkbox" ><label class="sk-toggleable__label" for="a1aaeb06-a92a-4237-92f5-f6100bc8fe7e">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df4d137d-40e2-46da-9964-807b15c0f9c5" type="checkbox" ><label class="sk-toggleable__label" for="df4d137d-40e2-46da-9964-807b15c0f9c5">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="579fbb32-0517-4833-9cde-210914477fc2" type="checkbox" ><label class="sk-toggleable__label" for="579fbb32-0517-4833-9cde-210914477fc2">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6d122de-d183-477d-9aec-61bf6ede7336" type="checkbox" ><label class="sk-toggleable__label" for="f6d122de-d183-477d-9aec-61bf6ede7336">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="872d0707-d001-4122-8f45-d2a4019b74c5" type="checkbox" ><label class="sk-toggleable__label" for="872d0707-d001-4122-8f45-d2a4019b74c5">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de97381a-5a5b-4955-9fae-083578c2c7d4" type="checkbox" ><label class="sk-toggleable__label" for="de97381a-5a5b-4955-9fae-083578c2c7d4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab6ceaaf-091d-4675-a908-f47dfacd0bc6" type="checkbox" ><label class="sk-toggleable__label" for="ab6ceaaf-091d-4675-a908-f47dfacd0bc6">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46692e8d-0d24-4a07-afe1-0e0d4f73f915" type="checkbox" ><label class="sk-toggleable__label" for="46692e8d-0d24-4a07-afe1-0e0d4f73f915">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9704669-a366-4961-ae0d-178f32640b11" type="checkbox" ><label class="sk-toggleable__label" for="e9704669-a366-4961-ae0d-178f32640b11">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39e3e5bf-5c77-4fce-b546-367103fb75fe" type="checkbox" ><label class="sk-toggleable__label" for="39e3e5bf-5c77-4fce-b546-367103fb75fe">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="502f60f0-c9a9-4a78-8586-0eac75f24405" type="checkbox" ><label class="sk-toggleable__label" for="502f60f0-c9a9-4a78-8586-0eac75f24405">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abfa90></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3661ee36-a7c8-4060-8cc0-392c7cbc3c98" type="checkbox" ><label class="sk-toggleable__label" for="3661ee36-a7c8-4060-8cc0-392c7cbc3c98">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfb023d5-b5b2-45ee-9ba5-cd5217166916" type="checkbox" ><label class="sk-toggleable__label" for="dfb023d5-b5b2-45ee-9ba5-cd5217166916">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa392abf430></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6e74b03-acc7-4308-96f1-bd76e5b99a66" type="checkbox" ><label class="sk-toggleable__label" for="d6e74b03-acc7-4308-96f1-bd76e5b99a66">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25edb7f5-303a-4fd1-8aae-20aa516e5ce3" type="checkbox" ><label class="sk-toggleable__label" for="25edb7f5-303a-4fd1-8aae-20aa516e5ce3">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8924ffb-1c19-40f2-acf7-7fe8cafb4ac2" type="checkbox" ><label class="sk-toggleable__label" for="a8924ffb-1c19-40f2-acf7-7fe8cafb4ac2">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 1.07 seconds, Lasso  Evaluation in 0.48 seconds, Gradient Boosting  Evaluation in 0.77 seconds, Stacking Regressor  Evaluation in 12.33 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  30.736 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
