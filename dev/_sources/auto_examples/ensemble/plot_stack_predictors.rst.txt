
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d {color: black;background-color: white;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d pre{padding: 0;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-toggleable {background-color: white;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-estimator:hover {background-color: #d4ebff;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-item {z-index: 1;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-parallel-item:only-child::after {width: 0;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-ad44c7f0-3c4a-42aa-b8db-cfc5db9e393d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61b4cf95-9505-48bc-9d4f-e38343b2a782" type="checkbox" ><label class="sk-toggleable__label" for="61b4cf95-9505-48bc-9d4f-e38343b2a782">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97f99dd1-4f41-419d-8ba7-3e2628751a6b" type="checkbox" ><label class="sk-toggleable__label" for="97f99dd1-4f41-419d-8ba7-3e2628751a6b">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2d354d6-0768-41fe-ab5b-e6b8cd972a82" type="checkbox" ><label class="sk-toggleable__label" for="c2d354d6-0768-41fe-ab5b-e6b8cd972a82">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b20f7a87-4051-497b-b0ef-0e47014e47fe" type="checkbox" ><label class="sk-toggleable__label" for="b20f7a87-4051-497b-b0ef-0e47014e47fe">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58430cad-18e0-4e79-87e3-709c60d3333d" type="checkbox" ><label class="sk-toggleable__label" for="58430cad-18e0-4e79-87e3-709c60d3333d">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 {color: black;background-color: white;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 pre{padding: 0;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-toggleable {background-color: white;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-item {z-index: 1;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-parallel-item:only-child::after {width: 0;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-bbe9d5aa-1610-481b-9bfd-06cf4b6c3cc0" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b5ce8a1-580e-48ac-a74c-fbaef251d19a" type="checkbox" ><label class="sk-toggleable__label" for="2b5ce8a1-580e-48ac-a74c-fbaef251d19a">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7807b994-d45e-4325-aa63-868b4b1a865c" type="checkbox" ><label class="sk-toggleable__label" for="7807b994-d45e-4325-aa63-868b4b1a865c">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eed4c64-a9b8-401a-add6-b0dc72d46340" type="checkbox" ><label class="sk-toggleable__label" for="0eed4c64-a9b8-401a-add6-b0dc72d46340">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee2fec52-070a-4dce-8376-90416b6111c7" type="checkbox" ><label class="sk-toggleable__label" for="ee2fec52-070a-4dce-8376-90416b6111c7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0958a1bc-caf9-4ce3-8565-386fbcce0ca1" type="checkbox" ><label class="sk-toggleable__label" for="0958a1bc-caf9-4ce3-8565-386fbcce0ca1">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6552444-9b37-4255-9553-6da34380ca08" type="checkbox" ><label class="sk-toggleable__label" for="d6552444-9b37-4255-9553-6da34380ca08">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 {color: black;background-color: white;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 pre{padding: 0;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-toggleable {background-color: white;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-item {z-index: 1;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-parallel-item:only-child::after {width: 0;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-6e0788fd-491e-4397-be8f-85f4bcc9cf84" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f6f5fd9-a30e-4365-b467-4ff160a81a96" type="checkbox" ><label class="sk-toggleable__label" for="6f6f5fd9-a30e-4365-b467-4ff160a81a96">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fba4e438-e72a-447f-bcd3-c6604d9bb7cc" type="checkbox" ><label class="sk-toggleable__label" for="fba4e438-e72a-447f-bcd3-c6604d9bb7cc">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97617df0-4392-4088-b1f1-e4dcc9c97ad8" type="checkbox" ><label class="sk-toggleable__label" for="97617df0-4392-4088-b1f1-e4dcc9c97ad8">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c05903d-cfd7-4b84-946c-dccfa2ee7e1d" type="checkbox" ><label class="sk-toggleable__label" for="6c05903d-cfd7-4b84-946c-dccfa2ee7e1d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8b8ba4b-5036-4f52-b064-29cce27aedcc" type="checkbox" ><label class="sk-toggleable__label" for="b8b8ba4b-5036-4f52-b064-29cce27aedcc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="254db972-5f19-4e03-bec1-864999877e0b" type="checkbox" ><label class="sk-toggleable__label" for="254db972-5f19-4e03-bec1-864999877e0b">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f84ee169-2865-4db2-931c-487042137f49" type="checkbox" ><label class="sk-toggleable__label" for="f84ee169-2865-4db2-931c-487042137f49">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3786a44b-6034-4cdd-9e33-74a1b6052321" type="checkbox" ><label class="sk-toggleable__label" for="3786a44b-6034-4cdd-9e33-74a1b6052321">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-02db97ad-8d71-4baf-86dc-775e234ef58b {color: black;background-color: white;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b pre{padding: 0;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-toggleable {background-color: white;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-estimator:hover {background-color: #d4ebff;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-item {z-index: 1;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-parallel-item:only-child::after {width: 0;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-02db97ad-8d71-4baf-86dc-775e234ef58b div.sk-container {display: inline-block;position: relative;}</style><div id="sk-02db97ad-8d71-4baf-86dc-775e234ef58b" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94eef6ee-37ce-4fb1-bc91-46f92c24d537" type="checkbox" ><label class="sk-toggleable__label" for="94eef6ee-37ce-4fb1-bc91-46f92c24d537">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b06bbda-3fd5-4731-9f6e-9afb06621eaf" type="checkbox" ><label class="sk-toggleable__label" for="7b06bbda-3fd5-4731-9f6e-9afb06621eaf">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cbd73ad-8b2d-4396-a92a-71f1b96356cd" type="checkbox" ><label class="sk-toggleable__label" for="3cbd73ad-8b2d-4396-a92a-71f1b96356cd">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b787554-a904-4862-ae4a-c07355cd92f4" type="checkbox" ><label class="sk-toggleable__label" for="8b787554-a904-4862-ae4a-c07355cd92f4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a92b20d4-8bcb-4d04-b8ea-aef34854fca7" type="checkbox" ><label class="sk-toggleable__label" for="a92b20d4-8bcb-4d04-b8ea-aef34854fca7">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="904a4035-203a-449a-b0af-c1c9021ea7e2" type="checkbox" ><label class="sk-toggleable__label" for="904a4035-203a-449a-b0af-c1c9021ea7e2">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c04569f-fb41-4336-aca6-d8c176d978f8" type="checkbox" ><label class="sk-toggleable__label" for="5c04569f-fb41-4336-aca6-d8c176d978f8">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-307146b4-e466-4673-b9a6-ed4b603044b0 {color: black;background-color: white;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 pre{padding: 0;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-toggleable {background-color: white;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-item {z-index: 1;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-parallel-item:only-child::after {width: 0;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-307146b4-e466-4673-b9a6-ed4b603044b0 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-307146b4-e466-4673-b9a6-ed4b603044b0" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acb2d85f-d7be-437f-8cc9-e78d3bd5bd63" type="checkbox" ><label class="sk-toggleable__label" for="acb2d85f-d7be-437f-8cc9-e78d3bd5bd63">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e058626-ae7e-44c8-872d-6efb60e1c730" type="checkbox" ><label class="sk-toggleable__label" for="8e058626-ae7e-44c8-872d-6efb60e1c730">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a5e5640-4d2b-47d6-a5b8-b1087a19d57a" type="checkbox" ><label class="sk-toggleable__label" for="6a5e5640-4d2b-47d6-a5b8-b1087a19d57a">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="232641ab-e6bb-4ebd-8f1a-2d075b26d151" type="checkbox" ><label class="sk-toggleable__label" for="232641ab-e6bb-4ebd-8f1a-2d075b26d151">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d1997ba-f6a7-4164-a5e4-2c9053b4b6a2" type="checkbox" ><label class="sk-toggleable__label" for="8d1997ba-f6a7-4164-a5e4-2c9053b4b6a2">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f73ed72-b290-42b0-8ddd-9fd9d9a58bae" type="checkbox" ><label class="sk-toggleable__label" for="1f73ed72-b290-42b0-8ddd-9fd9d9a58bae">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f800f8d2-74e3-459e-979a-f9241d4b4ca1" type="checkbox" ><label class="sk-toggleable__label" for="f800f8d2-74e3-459e-979a-f9241d4b4ca1">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e431f342-9326-4e1b-9f88-16782804e59a {color: black;background-color: white;}#sk-e431f342-9326-4e1b-9f88-16782804e59a pre{padding: 0;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-toggleable {background-color: white;}#sk-e431f342-9326-4e1b-9f88-16782804e59a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e431f342-9326-4e1b-9f88-16782804e59a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e431f342-9326-4e1b-9f88-16782804e59a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-estimator:hover {background-color: #d4ebff;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-item {z-index: 1;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-parallel-item:only-child::after {width: 0;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e431f342-9326-4e1b-9f88-16782804e59a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-e431f342-9326-4e1b-9f88-16782804e59a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0364d0d8-3017-4862-b389-d68a939cd68f" type="checkbox" ><label class="sk-toggleable__label" for="0364d0d8-3017-4862-b389-d68a939cd68f">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea2b1c9b-84ff-49fd-91be-6dea992a9c46" type="checkbox" ><label class="sk-toggleable__label" for="ea2b1c9b-84ff-49fd-91be-6dea992a9c46">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="179981f8-25c4-4d67-8f63-0c0ccc19f732" type="checkbox" ><label class="sk-toggleable__label" for="179981f8-25c4-4d67-8f63-0c0ccc19f732">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="037127cd-18d1-4f6a-a27b-6294508d4188" type="checkbox" ><label class="sk-toggleable__label" for="037127cd-18d1-4f6a-a27b-6294508d4188">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7d7b8a1-f60f-4cc9-a292-227feb09448f" type="checkbox" ><label class="sk-toggleable__label" for="d7d7b8a1-f60f-4cc9-a292-227feb09448f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db61cd73-d82c-4ff1-9ef6-600e0ec43c87" type="checkbox" ><label class="sk-toggleable__label" for="db61cd73-d82c-4ff1-9ef6-600e0ec43c87">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ee078cf-491e-4e9e-a567-5518c7686e59" type="checkbox" ><label class="sk-toggleable__label" for="5ee078cf-491e-4e9e-a567-5518c7686e59">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a871daa-72a7-42a5-9bc1-8246cae2d49c" type="checkbox" ><label class="sk-toggleable__label" for="3a871daa-72a7-42a5-9bc1-8246cae2d49c">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a89b6edc-e961-409a-831e-440be08d4cee" type="checkbox" ><label class="sk-toggleable__label" for="a89b6edc-e961-409a-831e-440be08d4cee">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="615cc5c5-74d4-4695-a79c-68fe9d08bb65" type="checkbox" ><label class="sk-toggleable__label" for="615cc5c5-74d4-4695-a79c-68fe9d08bb65">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81977863-15f5-443b-b04f-1a9b3f302354" type="checkbox" ><label class="sk-toggleable__label" for="81977863-15f5-443b-b04f-1a9b3f302354">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8903e5a-176c-4418-97e5-4853213d3b62" type="checkbox" ><label class="sk-toggleable__label" for="c8903e5a-176c-4418-97e5-4853213d3b62">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdfff34d-3472-4c5d-a4d2-460bd12d0cce" type="checkbox" ><label class="sk-toggleable__label" for="bdfff34d-3472-4c5d-a4d2-460bd12d0cce">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d5a8eda-e004-4064-94ae-11534b48d340" type="checkbox" ><label class="sk-toggleable__label" for="0d5a8eda-e004-4064-94ae-11534b48d340">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d784988a-1836-488a-82d7-c52537980b1b" type="checkbox" ><label class="sk-toggleable__label" for="d784988a-1836-488a-82d7-c52537980b1b">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba760d68-dee1-4a1f-8761-4864739e2749" type="checkbox" ><label class="sk-toggleable__label" for="ba760d68-dee1-4a1f-8761-4864739e2749">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b640></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21fc9e38-b5fc-40c3-9041-9dae41ab5b6d" type="checkbox" ><label class="sk-toggleable__label" for="21fc9e38-b5fc-40c3-9041-9dae41ab5b6d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="792c8c7d-2f24-4e93-bfe3-d987259a574f" type="checkbox" ><label class="sk-toggleable__label" for="792c8c7d-2f24-4e93-bfe3-d987259a574f">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f7f9a28b580></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4172fbc-c88a-4023-b607-06a1336ad9e0" type="checkbox" ><label class="sk-toggleable__label" for="d4172fbc-c88a-4023-b607-06a1336ad9e0">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3aab2364-7b1d-4081-bcae-063633f309ee" type="checkbox" ><label class="sk-toggleable__label" for="3aab2364-7b1d-4081-bcae-063633f309ee">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2f86cd7-dc3e-43bc-b85a-b930ecf0eb40" type="checkbox" ><label class="sk-toggleable__label" for="e2f86cd7-dc3e-43bc-b85a-b930ecf0eb40">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 0.84 seconds, Lasso  Evaluation in 0.39 seconds, Gradient Boosting  Evaluation in 0.58 seconds, Stacking Regressor  Evaluation in 9.73 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  23.582 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
