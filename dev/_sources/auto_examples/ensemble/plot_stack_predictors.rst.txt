
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e478bfc5-1901-4bab-914d-13e4d438f51e {color: black;background-color: white;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e pre{padding: 0;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-toggleable {background-color: white;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-item {z-index: 1;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-parallel-item:only-child::after {width: 0;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e478bfc5-1901-4bab-914d-13e4d438f51e div.sk-container {display: inline-block;position: relative;}</style><div id="sk-e478bfc5-1901-4bab-914d-13e4d438f51e" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5212f198-2d52-420e-8245-7891f09a41a4" type="checkbox" ><label class="sk-toggleable__label" for="5212f198-2d52-420e-8245-7891f09a41a4">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="396dac1b-cdaa-4c06-8d24-92265150ff93" type="checkbox" ><label class="sk-toggleable__label" for="396dac1b-cdaa-4c06-8d24-92265150ff93">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4a86804-c3a0-48df-a4ac-5e2c59503c9e" type="checkbox" ><label class="sk-toggleable__label" for="b4a86804-c3a0-48df-a4ac-5e2c59503c9e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e4794be-6198-486f-92bd-05ce66c6ef4b" type="checkbox" ><label class="sk-toggleable__label" for="3e4794be-6198-486f-92bd-05ce66c6ef4b">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e343385-a18e-4420-9581-d04261a9d678" type="checkbox" ><label class="sk-toggleable__label" for="2e343385-a18e-4420-9581-d04261a9d678">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 {color: black;background-color: white;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 pre{padding: 0;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-toggleable {background-color: white;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-item {z-index: 1;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-194b43f0-aa45-4edf-82c3-4a82f94e30e1" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56e54662-2173-43fa-91e4-4db938621431" type="checkbox" ><label class="sk-toggleable__label" for="56e54662-2173-43fa-91e4-4db938621431">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c21feeef-9f10-43ba-a59c-c8333f4d3412" type="checkbox" ><label class="sk-toggleable__label" for="c21feeef-9f10-43ba-a59c-c8333f4d3412">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2ad6545-773f-44cb-b3c2-3496be0846e6" type="checkbox" ><label class="sk-toggleable__label" for="e2ad6545-773f-44cb-b3c2-3496be0846e6">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25b28519-124d-4733-96ce-86146dd62db6" type="checkbox" ><label class="sk-toggleable__label" for="25b28519-124d-4733-96ce-86146dd62db6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5482078-52bc-419a-886f-d0d95b194877" type="checkbox" ><label class="sk-toggleable__label" for="a5482078-52bc-419a-886f-d0d95b194877">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00dfea76-a702-4820-99ea-5e0fd4c7e5f5" type="checkbox" ><label class="sk-toggleable__label" for="00dfea76-a702-4820-99ea-5e0fd4c7e5f5">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a {color: black;background-color: white;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a pre{padding: 0;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-toggleable {background-color: white;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-estimator:hover {background-color: #d4ebff;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-item {z-index: 1;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-parallel-item:only-child::after {width: 0;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-f5d22ae4-9419-4a57-9c28-e2160d8efc2a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b06df8ef-d1de-4b8c-a9af-47971a92b1f2" type="checkbox" ><label class="sk-toggleable__label" for="b06df8ef-d1de-4b8c-a9af-47971a92b1f2">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8093dea7-03f1-4952-b3bb-be46fcd39b23" type="checkbox" ><label class="sk-toggleable__label" for="8093dea7-03f1-4952-b3bb-be46fcd39b23">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a3f64f0-d676-42a3-8571-462dbbcbe1dd" type="checkbox" ><label class="sk-toggleable__label" for="0a3f64f0-d676-42a3-8571-462dbbcbe1dd">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab83e655-a147-483b-9542-3f9a99752e22" type="checkbox" ><label class="sk-toggleable__label" for="ab83e655-a147-483b-9542-3f9a99752e22">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34e359f9-aef3-45b3-b138-d1490635657e" type="checkbox" ><label class="sk-toggleable__label" for="34e359f9-aef3-45b3-b138-d1490635657e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49ba0556-d973-4cf4-9b75-9c4b877d0aee" type="checkbox" ><label class="sk-toggleable__label" for="49ba0556-d973-4cf4-9b75-9c4b877d0aee">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff81ede1-8462-47df-ba54-5f49c6ed082c" type="checkbox" ><label class="sk-toggleable__label" for="ff81ede1-8462-47df-ba54-5f49c6ed082c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caa54c24-3ce0-4d13-9c39-b77e3a734121" type="checkbox" ><label class="sk-toggleable__label" for="caa54c24-3ce0-4d13-9c39-b77e3a734121">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e {color: black;background-color: white;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e pre{padding: 0;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-toggleable {background-color: white;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-estimator:hover {background-color: #d4ebff;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-item {z-index: 1;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-parallel-item:only-child::after {width: 0;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-adb1b6b8-4126-435c-8aa8-08808083ec1e div.sk-container {display: inline-block;position: relative;}</style><div id="sk-adb1b6b8-4126-435c-8aa8-08808083ec1e" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51da7195-cc24-4d5c-a70e-fc02d0c59a5d" type="checkbox" ><label class="sk-toggleable__label" for="51da7195-cc24-4d5c-a70e-fc02d0c59a5d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d4c5ae6-bfa3-4c61-8706-65a0ef1b5ff5" type="checkbox" ><label class="sk-toggleable__label" for="6d4c5ae6-bfa3-4c61-8706-65a0ef1b5ff5">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ba8d32f-da23-4db2-8ec0-290ae0a5b385" type="checkbox" ><label class="sk-toggleable__label" for="8ba8d32f-da23-4db2-8ec0-290ae0a5b385">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd530452-37d2-4b95-9d2e-c512fd8817ca" type="checkbox" ><label class="sk-toggleable__label" for="bd530452-37d2-4b95-9d2e-c512fd8817ca">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5fc944e-6f96-4911-bfdd-68b250521ca5" type="checkbox" ><label class="sk-toggleable__label" for="d5fc944e-6f96-4911-bfdd-68b250521ca5">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ed0cffe-17fa-444f-b1d1-897e40f6d91a" type="checkbox" ><label class="sk-toggleable__label" for="5ed0cffe-17fa-444f-b1d1-897e40f6d91a">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33f60c83-a331-4581-b648-99f2f8afd65b" type="checkbox" ><label class="sk-toggleable__label" for="33f60c83-a331-4581-b648-99f2f8afd65b">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d {color: black;background-color: white;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d pre{padding: 0;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-toggleable {background-color: white;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-item {z-index: 1;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-parallel-item:only-child::after {width: 0;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e2cb3e5-617a-4650-87f0-62e873250e5d div.sk-container {display: inline-block;position: relative;}</style><div id="sk-8e2cb3e5-617a-4650-87f0-62e873250e5d" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed6b9651-b33f-44d7-ad04-5e9cfd2206e1" type="checkbox" ><label class="sk-toggleable__label" for="ed6b9651-b33f-44d7-ad04-5e9cfd2206e1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35bcdbd0-c7d5-4f97-b607-944f79936f30" type="checkbox" ><label class="sk-toggleable__label" for="35bcdbd0-c7d5-4f97-b607-944f79936f30">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a51a1b39-b558-4523-bd1f-720461b57120" type="checkbox" ><label class="sk-toggleable__label" for="a51a1b39-b558-4523-bd1f-720461b57120">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dc0fbc7-8154-448c-9353-c5aa6f947349" type="checkbox" ><label class="sk-toggleable__label" for="4dc0fbc7-8154-448c-9353-c5aa6f947349">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3501d5e9-872e-4abc-8448-0f5749de12f1" type="checkbox" ><label class="sk-toggleable__label" for="3501d5e9-872e-4abc-8448-0f5749de12f1">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c75eab5-a7e2-424a-bfce-5dea4774a2af" type="checkbox" ><label class="sk-toggleable__label" for="7c75eab5-a7e2-424a-bfce-5dea4774a2af">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40b2d38c-8209-4c6b-bd40-27dda5edb58b" type="checkbox" ><label class="sk-toggleable__label" for="40b2d38c-8209-4c6b-bd40-27dda5edb58b">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-45521677-db1f-45f1-b35a-b955967f03d2 {color: black;background-color: white;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 pre{padding: 0;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-toggleable {background-color: white;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-item {z-index: 1;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-parallel-item:only-child::after {width: 0;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-45521677-db1f-45f1-b35a-b955967f03d2 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-45521677-db1f-45f1-b35a-b955967f03d2" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8ea479b-f23a-44f7-818d-58c60a999e5d" type="checkbox" ><label class="sk-toggleable__label" for="c8ea479b-f23a-44f7-818d-58c60a999e5d">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d6884c9-4ec1-4362-9792-364d856fafcf" type="checkbox" ><label class="sk-toggleable__label" for="1d6884c9-4ec1-4362-9792-364d856fafcf">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d2e015d-cf68-4ef5-b138-28982bd88571" type="checkbox" ><label class="sk-toggleable__label" for="8d2e015d-cf68-4ef5-b138-28982bd88571">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc86d541-58a1-4998-b0d0-60364af53702" type="checkbox" ><label class="sk-toggleable__label" for="dc86d541-58a1-4998-b0d0-60364af53702">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c62fa33-fd4a-4f8e-bec0-b6c7fa09265c" type="checkbox" ><label class="sk-toggleable__label" for="7c62fa33-fd4a-4f8e-bec0-b6c7fa09265c">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54c525a4-93ac-4362-b4a0-6bdfcdaa33fb" type="checkbox" ><label class="sk-toggleable__label" for="54c525a4-93ac-4362-b4a0-6bdfcdaa33fb">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b619f220-2c49-449c-a7e0-6e6d87a504df" type="checkbox" ><label class="sk-toggleable__label" for="b619f220-2c49-449c-a7e0-6e6d87a504df">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a96da9f0-1b77-4d72-821a-ccdd8c89d688" type="checkbox" ><label class="sk-toggleable__label" for="a96da9f0-1b77-4d72-821a-ccdd8c89d688">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ba71b06-c5f7-423b-9983-9241b4716c51" type="checkbox" ><label class="sk-toggleable__label" for="3ba71b06-c5f7-423b-9983-9241b4716c51">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d09466f7-b9ad-4e44-8e23-bd03e6b31b9a" type="checkbox" ><label class="sk-toggleable__label" for="d09466f7-b9ad-4e44-8e23-bd03e6b31b9a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a3a0eb7-63d1-4eec-8a9f-2264f7be3480" type="checkbox" ><label class="sk-toggleable__label" for="6a3a0eb7-63d1-4eec-8a9f-2264f7be3480">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b4e2482-3086-4a1b-aeae-8673e7a1496d" type="checkbox" ><label class="sk-toggleable__label" for="7b4e2482-3086-4a1b-aeae-8673e7a1496d">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e622cfbe-4ad2-45d3-996d-2bd62fcebef2" type="checkbox" ><label class="sk-toggleable__label" for="e622cfbe-4ad2-45d3-996d-2bd62fcebef2">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54de5957-677e-4540-b11d-4e8e95ea654e" type="checkbox" ><label class="sk-toggleable__label" for="54de5957-677e-4540-b11d-4e8e95ea654e">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27498415-ce3a-4d92-a02f-b356f3d708c9" type="checkbox" ><label class="sk-toggleable__label" for="27498415-ce3a-4d92-a02f-b356f3d708c9">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4853e26-6f8c-4d73-b8cc-08a37fc77438" type="checkbox" ><label class="sk-toggleable__label" for="d4853e26-6f8c-4d73-b8cc-08a37fc77438">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25160></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b66f45d5-21ee-46cf-9b6f-1e96946f53a0" type="checkbox" ><label class="sk-toggleable__label" for="b66f45d5-21ee-46cf-9b6f-1e96946f53a0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c530e4c-ed93-4ef8-910d-2a7029ce52fb" type="checkbox" ><label class="sk-toggleable__label" for="4c530e4c-ed93-4ef8-910d-2a7029ce52fb">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7fa885f25280></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9a5e7df-e596-4017-a857-55f2053627e8" type="checkbox" ><label class="sk-toggleable__label" for="e9a5e7df-e596-4017-a857-55f2053627e8">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7df95181-a1e1-4254-9020-30e1a273ccc6" type="checkbox" ><label class="sk-toggleable__label" for="7df95181-a1e1-4254-9020-30e1a273ccc6">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27ffbd5a-d98f-4e44-9596-a15f71113f79" type="checkbox" ><label class="sk-toggleable__label" for="27ffbd5a-d98f-4e44-9596-a15f71113f79">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 0.89 seconds, Lasso  Evaluation in 0.54 seconds, Gradient Boosting  Evaluation in 0.65 seconds, Stacking Regressor  Evaluation in 10.39 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  25.553 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
