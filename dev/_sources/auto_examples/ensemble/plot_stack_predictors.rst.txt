
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ensemble/plot_stack_predictors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ensemble_plot_stack_predictors.py:


=================================
Combine predictors using stacking
=================================

.. currentmodule:: sklearn

Stacking refers to a method to blend estimators. In this strategy, some
estimators are individually fitted on some training data while a final
estimator is trained using the stacked predictions of these base estimators.

In this example, we illustrate the use case in which different regressors are
stacked together and a final linear penalized regressor is used to output the
prediction. We compare the performance of each individual regressor with the
stacking strategy. Stacking slightly improves the overall performance.

.. GENERATED FROM PYTHON SOURCE LINES 18-28

.. code-block:: default


    # Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
    #          Maria Telenczuk    <https://github.com/maikia>
    # License: BSD 3 clause

    print(__doc__)

    from sklearn import set_config
    set_config(display='diagram')








.. GENERATED FROM PYTHON SOURCE LINES 29-45

Download the dataset
#############################################################################

 We will use `Ames Housing`_ dataset which was first compiled by Dean De Cock
 and became better known after it was used in Kaggle challenge. It is a set
 of 1460 residential homes in Ames, Iowa, each described by 80 features. We
 will use it to predict the final logarithmic price of the houses. In this
 example we will use only 20 most interesting features chosen using
 GradientBoostingRegressor() and limit number of entries (here we won't go
 into the details on how to select the most interesting features).

 The Ames housing dataset is not shipped with scikit-learn and therefore we
 will fetch it from `OpenML`_.

 .. _`Ames Housing`: http://jse.amstat.org/v19n3/decock.pdf
 .. _`OpenML`: https://www.openml.org/d/42165

.. GENERATED FROM PYTHON SOURCE LINES 45-74

.. code-block:: default


    import numpy as np

    from sklearn.datasets import fetch_openml
    from sklearn.utils import shuffle


    def load_ames_housing():
        df = fetch_openml(name="house_prices", as_frame=True)
        X = df.data
        y = df.target

        features = ['YrSold', 'HeatingQC', 'Street', 'YearRemodAdd', 'Heating',
                    'MasVnrType', 'BsmtUnfSF', 'Foundation', 'MasVnrArea',
                    'MSSubClass', 'ExterQual', 'Condition2', 'GarageCars',
                    'GarageType', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1',
                    'HouseStyle', 'MiscFeature', 'MoSold']

        X = X[features]
        X, y = shuffle(X, y, random_state=0)

        X = X[:600]
        y = y[:600]
        return X, np.log(y)


    X, y = load_ames_housing()









.. GENERATED FROM PYTHON SOURCE LINES 75-81

Make pipeline to preprocess the data
#############################################################################

 Before we can use Ames dataset we still need to do some preprocessing.
 First, we will select the categorical and numerical columns of the dataset to
 construct the first step of the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: default


    from sklearn.compose import make_column_selector

    cat_selector = make_column_selector(dtype_include=object)
    num_selector = make_column_selector(dtype_include=np.number)
    cat_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['HeatingQC', 'Street', 'Heating', 'MasVnrType', 'Foundation', 'ExterQual', 'Condition2', 'GarageType', 'HouseStyle', 'MiscFeature']



.. GENERATED FROM PYTHON SOURCE LINES 89-91

.. code-block:: default

    num_selector(X)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['YrSold', 'YearRemodAdd', 'BsmtUnfSF', 'MasVnrArea', 'MSSubClass', 'GarageCars', 'OverallQual', 'TotalBsmtSF', 'BsmtFinSF1', 'MoSold']



.. GENERATED FROM PYTHON SOURCE LINES 92-101

Then, we will need to design preprocessing pipelines which depends on the
ending regressor. If the ending regressor is a linear model, one needs to
one-hot encode the categories. If the ending regressor is a tree-based model
an ordinal encoder will be sufficient. Besides, numerical values need to be
standardized for a linear model while the raw numerical data can be treated
as is by a tree-based model. However, both models need an imputer to
handle missing values.

We will first design the pipeline required for the tree-based models.

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default


    from sklearn.compose import make_column_transformer
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import make_pipeline
    from sklearn.preprocessing import OrdinalEncoder

    cat_tree_processor = OrdinalEncoder(
        handle_unknown="use_encoded_value", unknown_value=-1)
    num_tree_processor = SimpleImputer(strategy="mean", add_indicator=True)

    tree_preprocessor = make_column_transformer(
        (num_tree_processor, num_selector), (cat_tree_processor, cat_selector))
    tree_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 {color: black;background-color: white;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 pre{padding: 0;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-toggleable {background-color: white;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-item {z-index: 1;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-parallel-item:only-child::after {width: 0;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-f639e3e7-ef8f-4a0b-83a0-4d32fb279e46" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90368967-9b53-4de6-b529-a9bff0b19a48" type="checkbox" ><label class="sk-toggleable__label" for="90368967-9b53-4de6-b529-a9bff0b19a48">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a39c712-7b83-4b8b-96bd-b9ded7a8104d" type="checkbox" ><label class="sk-toggleable__label" for="7a39c712-7b83-4b8b-96bd-b9ded7a8104d">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5842c89b-9755-47d4-8aa1-bb6484d33300" type="checkbox" ><label class="sk-toggleable__label" for="5842c89b-9755-47d4-8aa1-bb6484d33300">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="315dc44b-608f-4b98-b763-fe3ebad0a326" type="checkbox" ><label class="sk-toggleable__label" for="315dc44b-608f-4b98-b763-fe3ebad0a326">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a7216dc-c8ee-4020-b9d8-da330d947041" type="checkbox" ><label class="sk-toggleable__label" for="6a7216dc-c8ee-4020-b9d8-da330d947041">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-118

Then, we will now define the preprocessor used when the ending regressor
is a linear model.

.. GENERATED FROM PYTHON SOURCE LINES 118-130

.. code-block:: default


    from sklearn.preprocessing import OneHotEncoder
    from sklearn.preprocessing import StandardScaler

    cat_linear_processor = OneHotEncoder(handle_unknown="ignore")
    num_linear_processor = make_pipeline(
        StandardScaler(), SimpleImputer(strategy="mean", add_indicator=True))

    linear_preprocessor = make_column_transformer(
        (num_linear_processor, num_selector), (cat_linear_processor, cat_selector))
    linear_preprocessor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc {color: black;background-color: white;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc pre{padding: 0;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-toggleable {background-color: white;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-estimator:hover {background-color: #d4ebff;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-item {z-index: 1;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-parallel-item:only-child::after {width: 0;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc div.sk-container {display: inline-block;position: relative;}</style><div id="sk-8fe5179e-400e-474f-9bbc-6bc51623cbfc" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b1ce8f8-4dac-49b2-9d0b-95b9860b7ea9" type="checkbox" ><label class="sk-toggleable__label" for="3b1ce8f8-4dac-49b2-9d0b-95b9860b7ea9">ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee038f8b-7408-45a4-a639-54919b021d8e" type="checkbox" ><label class="sk-toggleable__label" for="ee038f8b-7408-45a4-a639-54919b021d8e">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4244745-ec93-41be-8e97-50044dfaad15" type="checkbox" ><label class="sk-toggleable__label" for="b4244745-ec93-41be-8e97-50044dfaad15">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b77eed7-325b-4f81-8e26-61aae3fd4baf" type="checkbox" ><label class="sk-toggleable__label" for="0b77eed7-325b-4f81-8e26-61aae3fd4baf">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="565cfe90-f3bd-42ee-8382-97d3af407847" type="checkbox" ><label class="sk-toggleable__label" for="565cfe90-f3bd-42ee-8382-97d3af407847">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4ec1f44-b9fb-48d8-9f94-d782f904ea0d" type="checkbox" ><label class="sk-toggleable__label" for="a4ec1f44-b9fb-48d8-9f94-d782f904ea0d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 131-149

Stack of predictors on a single data set
#############################################################################

 It is sometimes tedious to find the model which will best perform on a given
 dataset. Stacking provide an alternative by combining the outputs of several
 learners, without the need to choose a model specifically. The performance of
 stacking is usually close to the best model and sometimes it can outperform
 the prediction performance of each individual model.

 Here, we combine 3 learners (linear and non-linear) and use a ridge regressor
 to combine their outputs together.

 .. note::
    Although we will make new pipelines with the processors which we wrote in
    the previous section for the 3 learners, the final estimator
    :class:`~sklearn.linear_model.RidgeCV()` does not need preprocessing of
    the data as it will be fed with the already preprocessed output from the 3
    learners.

.. GENERATED FROM PYTHON SOURCE LINES 149-155

.. code-block:: default


    from sklearn.linear_model import LassoCV

    lasso_pipeline = make_pipeline(linear_preprocessor, LassoCV())
    lasso_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 {color: black;background-color: white;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 pre{padding: 0;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-toggleable {background-color: white;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-item {z-index: 1;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-parallel-item:only-child::after {width: 0;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-1e4ffeb2-8de4-47bd-b081-8392e2079c03" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25da90c8-1890-4cf6-bad8-c34516133249" type="checkbox" ><label class="sk-toggleable__label" for="25da90c8-1890-4cf6-bad8-c34516133249">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('pipeline',
                                                      Pipeline(steps=[('standardscaler',
                                                                       StandardScaler()),
                                                                      ('simpleimputer',
                                                                       SimpleImputer(add_indicator=True))]),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                                     ('onehotencoder',
                                                      OneHotEncoder(handle_unknown='ignore'),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])),
                    ('lassocv', LassoCV())])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80ebebab-7842-4e90-a44e-8639b96916d7" type="checkbox" ><label class="sk-toggleable__label" for="80ebebab-7842-4e90-a44e-8639b96916d7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6ec9bfa-4fe7-41b2-a6cc-64176c39a02d" type="checkbox" ><label class="sk-toggleable__label" for="b6ec9bfa-4fe7-41b2-a6cc-64176c39a02d">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fb9e336-38ae-42f1-8ce8-f085a540e706" type="checkbox" ><label class="sk-toggleable__label" for="0fb9e336-38ae-42f1-8ce8-f085a540e706">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af754775-6270-48d6-9169-67a2a6ec6ba7" type="checkbox" ><label class="sk-toggleable__label" for="af754775-6270-48d6-9169-67a2a6ec6ba7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d14f5ac4-133b-487e-81f4-5608e295bc71" type="checkbox" ><label class="sk-toggleable__label" for="d14f5ac4-133b-487e-81f4-5608e295bc71">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3defb69-a77c-4d17-b2a3-8ab86bc08cf7" type="checkbox" ><label class="sk-toggleable__label" for="d3defb69-a77c-4d17-b2a3-8ab86bc08cf7">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08755616-eb77-43e5-891a-c15171918a2f" type="checkbox" ><label class="sk-toggleable__label" for="08755616-eb77-43e5-891a-c15171918a2f">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-162

.. code-block:: default

    from sklearn.ensemble import RandomForestRegressor

    rf_pipeline = make_pipeline(
        tree_preprocessor, RandomForestRegressor(random_state=42))
    rf_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 {color: black;background-color: white;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 pre{padding: 0;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-toggleable {background-color: white;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-item {z-index: 1;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-parallel-item:only-child::after {width: 0;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0c1f1054-a418-40e2-a0e8-b790ee62a448 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-0c1f1054-a418-40e2-a0e8-b790ee62a448" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f17a1cb-54d6-432b-b435-11aa972dd8b1" type="checkbox" ><label class="sk-toggleable__label" for="3f17a1cb-54d6-432b-b435-11aa972dd8b1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])),
                    ('randomforestregressor',
                     RandomForestRegressor(random_state=42))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="349a502c-1ed0-46ca-83cd-b2bcb1aea976" type="checkbox" ><label class="sk-toggleable__label" for="349a502c-1ed0-46ca-83cd-b2bcb1aea976">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90d74aca-8a1f-4855-b11f-6308b101c667" type="checkbox" ><label class="sk-toggleable__label" for="90d74aca-8a1f-4855-b11f-6308b101c667">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3b2114d-815a-4eb6-aa80-daa833081bf9" type="checkbox" ><label class="sk-toggleable__label" for="b3b2114d-815a-4eb6-aa80-daa833081bf9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="045da26b-615e-4297-a829-237ec116b426" type="checkbox" ><label class="sk-toggleable__label" for="045da26b-615e-4297-a829-237ec116b426">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dcbbaec-14c2-43ca-a8d7-3817ebee9006" type="checkbox" ><label class="sk-toggleable__label" for="0dcbbaec-14c2-43ca-a8d7-3817ebee9006">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b9feee7-e4cd-4340-8200-de09c8fe4358" type="checkbox" ><label class="sk-toggleable__label" for="1b9feee7-e4cd-4340-8200-de09c8fe4358">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 163-170

.. code-block:: default

    from sklearn.experimental import enable_hist_gradient_boosting  # noqa
    from sklearn.ensemble import HistGradientBoostingRegressor

    gbdt_pipeline = make_pipeline(
        tree_preprocessor, HistGradientBoostingRegressor(random_state=0))
    gbdt_pipeline






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 {color: black;background-color: white;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 pre{padding: 0;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-toggleable {background-color: white;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-item {z-index: 1;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-parallel-item:only-child::after {width: 0;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9c78f5c4-1273-4975-9ae3-a16491754d05 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-9c78f5c4-1273-4975-9ae3-a16491754d05" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="024418ec-51a1-4cf7-ba77-db474eab923e" type="checkbox" ><label class="sk-toggleable__label" for="024418ec-51a1-4cf7-ba77-db474eab923e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('simpleimputer',
                                                      SimpleImputer(add_indicator=True),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                                     ('ordinalencoder',
                                                      OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                     unknown_value=-1),
                                                      <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])),
                    ('histgradientboostingregressor',
                     HistGradientBoostingRegressor(random_state=0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9db9ba7c-3aa5-42cb-ad40-0fb8548df305" type="checkbox" ><label class="sk-toggleable__label" for="9db9ba7c-3aa5-42cb-ad40-0fb8548df305">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84ab74c5-502b-4927-9e99-36ccada4c6f6" type="checkbox" ><label class="sk-toggleable__label" for="84ab74c5-502b-4927-9e99-36ccada4c6f6">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6de84b0-cb82-4027-bd0a-309356d8c9cd" type="checkbox" ><label class="sk-toggleable__label" for="d6de84b0-cb82-4027-bd0a-309356d8c9cd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22bc16ef-4e1a-4546-a9b6-342f8f15c7f7" type="checkbox" ><label class="sk-toggleable__label" for="22bc16ef-4e1a-4546-a9b6-342f8f15c7f7">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0de6c29-cb40-4214-a303-f335dfb94207" type="checkbox" ><label class="sk-toggleable__label" for="d0de6c29-cb40-4214-a303-f335dfb94207">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f0e1462-a1a1-487d-b65a-4d0c0e52a814" type="checkbox" ><label class="sk-toggleable__label" for="8f0e1462-a1a1-487d-b65a-4d0c0e52a814">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 171-182

.. code-block:: default

    from sklearn.ensemble import StackingRegressor
    from sklearn.linear_model import RidgeCV

    estimators = [('Random Forest', rf_pipeline),
                  ('Lasso', lasso_pipeline),
                  ('Gradient Boosting', gbdt_pipeline)]

    stacking_regressor = StackingRegressor(
        estimators=estimators, final_estimator=RidgeCV())
    stacking_regressor






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 {color: black;background-color: white;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 pre{padding: 0;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-toggleable {background-color: white;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.2em 0.3em;box-sizing: border-box;text-align: center;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;margin: 0.25em 0.25em;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-estimator:hover {background-color: #d4ebff;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-item {z-index: 1;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-parallel-item:only-child::after {width: 0;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0.2em;box-sizing: border-box;padding-bottom: 0.1em;background-color: white;position: relative;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-401d748b-374b-4a8b-ad0c-468ee98c1655 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-401d748b-374b-4a8b-ad0c-468ee98c1655" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3011c772-2b6b-46a0-97f6-5a4b16f5d200" type="checkbox" ><label class="sk-toggleable__label" for="3011c772-2b6b-46a0-97f6-5a4b16f5d200">StackingRegressor</label><div class="sk-toggleable__content"><pre>StackingRegressor(estimators=[('Random Forest',
                                   Pipeline(steps=[('columntransformer',
                                                    ColumnTransformer(transformers=[('simpleimputer',
                                                                                     SimpleImputer(add_indicator=True),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose...
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                                                                    ('ordinalencoder',
                                                                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                                                                    unknown_value=-1),
                                                                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])),
                                                   ('histgradientboostingregressor',
                                                    HistGradientBoostingRegressor(random_state=0))]))],
                      final_estimator=RidgeCV(alphas=array([ 0.1,  1. , 10. ])))</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Random Forest</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6b2e7ab-9539-43b6-96a3-6ee71a20db5f" type="checkbox" ><label class="sk-toggleable__label" for="d6b2e7ab-9539-43b6-96a3-6ee71a20db5f">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e260194e-a9f9-437a-a285-4acc002d9399" type="checkbox" ><label class="sk-toggleable__label" for="e260194e-a9f9-437a-a285-4acc002d9399">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33732227-9837-4b79-9853-9f48461b2095" type="checkbox" ><label class="sk-toggleable__label" for="33732227-9837-4b79-9853-9f48461b2095">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9af903b5-7548-47e6-8293-154feccc79c7" type="checkbox" ><label class="sk-toggleable__label" for="9af903b5-7548-47e6-8293-154feccc79c7">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20029576-a4fe-42b2-b487-37ee54a91b6f" type="checkbox" ><label class="sk-toggleable__label" for="20029576-a4fe-42b2-b487-37ee54a91b6f">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb300ca5-2ccc-4998-80bd-e4e9fa310222" type="checkbox" ><label class="sk-toggleable__label" for="bb300ca5-2ccc-4998-80bd-e4e9fa310222">RandomForestRegressor</label><div class="sk-toggleable__content"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Lasso</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60968afe-ba9b-4afc-9089-9f6da4f8bc62" type="checkbox" ><label class="sk-toggleable__label" for="60968afe-ba9b-4afc-9089-9f6da4f8bc62">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('pipeline',
                                     Pipeline(steps=[('standardscaler',
                                                      StandardScaler()),
                                                     ('simpleimputer',
                                                      SimpleImputer(add_indicator=True))]),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('onehotencoder',
                                     OneHotEncoder(handle_unknown='ignore'),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc421e94-bbdc-4445-a049-484e7fb82d97" type="checkbox" ><label class="sk-toggleable__label" for="cc421e94-bbdc-4445-a049-484e7fb82d97">pipeline</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6270267-de3d-4a49-bf1b-6cab9480fa49" type="checkbox" ><label class="sk-toggleable__label" for="b6270267-de3d-4a49-bf1b-6cab9480fa49">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c1b6b8c-1e9e-4b4b-8482-5421425928c7" type="checkbox" ><label class="sk-toggleable__label" for="4c1b6b8c-1e9e-4b4b-8482-5421425928c7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45cab87f-43fd-42b7-bae7-bf172eff8396" type="checkbox" ><label class="sk-toggleable__label" for="45cab87f-43fd-42b7-bae7-bf172eff8396">onehotencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33989938-e2de-4d4b-86d2-e388f12aed0e" type="checkbox" ><label class="sk-toggleable__label" for="33989938-e2de-4d4b-86d2-e388f12aed0e">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35cfd7b5-3f3a-49fa-b922-8e7ddbbd55ca" type="checkbox" ><label class="sk-toggleable__label" for="35cfd7b5-3f3a-49fa-b922-8e7ddbbd55ca">LassoCV</label><div class="sk-toggleable__content"><pre>LassoCV()</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><label>Gradient Boosting</label></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="148f1dde-3718-40ce-8f1e-7e8fd1fcb98a" type="checkbox" ><label class="sk-toggleable__label" for="148f1dde-3718-40ce-8f1e-7e8fd1fcb98a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('simpleimputer',
                                     SimpleImputer(add_indicator=True),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0>),
                                    ('ordinalencoder',
                                     OrdinalEncoder(handle_unknown='use_encoded_value',
                                                    unknown_value=-1),
                                     <sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0>)])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50619129-1543-481d-9ae0-6f248dac9ac4" type="checkbox" ><label class="sk-toggleable__label" for="50619129-1543-481d-9ae0-6f248dac9ac4">simpleimputer</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b617f0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73fe26ae-3921-45d5-8d38-15d4d5cf9105" type="checkbox" ><label class="sk-toggleable__label" for="73fe26ae-3921-45d5-8d38-15d4d5cf9105">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(add_indicator=True)</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90701d7d-d532-4781-88fa-6d519bd782b7" type="checkbox" ><label class="sk-toggleable__label" for="90701d7d-d532-4781-88fa-6d519bd782b7">ordinalencoder</label><div class="sk-toggleable__content"><pre><sklearn.compose._column_transformer.make_column_selector object at 0x7f1b32b619d0></pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b464cf7-363b-4048-a433-feec43f17fca" type="checkbox" ><label class="sk-toggleable__label" for="5b464cf7-363b-4048-a433-feec43f17fca">OrdinalEncoder</label><div class="sk-toggleable__content"><pre>OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f4614f0-6a48-41b0-acf0-a06b6cf549a9" type="checkbox" ><label class="sk-toggleable__label" for="6f4614f0-6a48-41b0-acf0-a06b6cf549a9">HistGradientBoostingRegressor</label><div class="sk-toggleable__content"><pre>HistGradientBoostingRegressor(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c725922d-220b-47d1-ae68-6885ad0966a9" type="checkbox" ><label class="sk-toggleable__label" for="c725922d-220b-47d1-ae68-6885ad0966a9">RidgeCV</label><div class="sk-toggleable__content"><pre>RidgeCV(alphas=array([ 0.1,  1. , 10. ]))</pre></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 183-192

Measure and plot the results
#############################################################################

 Now we can use Ames Housing dataset to make the predictions. We check the
 performance of each individual predictor as well as of the stack of the
 regressors.

 The function ``plot_regression_results`` is used to plot the predicted and
 true targets.

.. GENERATED FROM PYTHON SOURCE LINES 192-251

.. code-block:: default



    import time
    import matplotlib.pyplot as plt
    from sklearn.model_selection import cross_validate, cross_val_predict


    def plot_regression_results(ax, y_true, y_pred, title, scores, elapsed_time):
        """Scatter plot of the predicted vs true targets."""
        ax.plot([y_true.min(), y_true.max()],
                [y_true.min(), y_true.max()],
                '--r', linewidth=2)
        ax.scatter(y_true, y_pred, alpha=0.2)

        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.get_xaxis().tick_bottom()
        ax.get_yaxis().tick_left()
        ax.spines['left'].set_position(('outward', 10))
        ax.spines['bottom'].set_position(('outward', 10))
        ax.set_xlim([y_true.min(), y_true.max()])
        ax.set_ylim([y_true.min(), y_true.max()])
        ax.set_xlabel('Measured')
        ax.set_ylabel('Predicted')
        extra = plt.Rectangle((0, 0), 0, 0, fc="w", fill=False,
                              edgecolor='none', linewidth=0)
        ax.legend([extra], [scores], loc='upper left')
        title = title + '\n Evaluation in {:.2f} seconds'.format(elapsed_time)
        ax.set_title(title)


    fig, axs = plt.subplots(2, 2, figsize=(9, 7))
    axs = np.ravel(axs)

    for ax, (name, est) in zip(axs, estimators + [('Stacking Regressor',
                                                   stacking_regressor)]):
        start_time = time.time()
        score = cross_validate(est, X, y,
                               scoring=['r2', 'neg_mean_absolute_error'],
                               n_jobs=-1, verbose=0)
        elapsed_time = time.time() - start_time

        y_pred = cross_val_predict(est, X, y, n_jobs=-1, verbose=0)

        plot_regression_results(
            ax, y, y_pred,
            name,
            (r'$R^2={:.2f} \pm {:.2f}$' + '\n' + r'$MAE={:.2f} \pm {:.2f}$')
            .format(np.mean(score['test_r2']),
                    np.std(score['test_r2']),
                    -np.mean(score['test_neg_mean_absolute_error']),
                    np.std(score['test_neg_mean_absolute_error'])),
            elapsed_time)

    plt.suptitle('Single predictors versus stacked predictors')
    plt.tight_layout()
    plt.subplots_adjust(top=0.9)
    plt.show()




.. image:: /auto_examples/ensemble/images/sphx_glr_plot_stack_predictors_001.png
    :alt: Single predictors versus stacked predictors, Random Forest  Evaluation in 0.83 seconds, Lasso  Evaluation in 0.40 seconds, Gradient Boosting  Evaluation in 0.59 seconds, Stacking Regressor  Evaluation in 10.21 seconds
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 252-255

The stacked regressor will combine the strengths of the different regressors.
However, we also see that training the stacked regressor is much more
computationally expensive.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  24.601 seconds)


.. _sphx_glr_download_auto_examples_ensemble_plot_stack_predictors.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/ensemble/plot_stack_predictors.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stack_predictors.py <plot_stack_predictors.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stack_predictors.ipynb <plot_stack_predictors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
